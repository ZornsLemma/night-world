max_sprite_num = &30
q_subroutine_sprite_to_check_x2 = &71
q_subroutine_max_candidate_sprite_x2 = &70
q_subroutine_abs_x_difference = &72
q_subroutine_abs_y_difference = &73
sprite_pixel_current_x = &72
sprite_pixel_current_y = &73
get_sprite_details_sprite_index = &7c
l007d = &7d
t_subroutine_os_x_hi = &70
t_subroutine_os_x_lo = &71
t_subroutine_os_y_hi = &72
t_subroutine_w_minus_1_times_2 = &7f
t_subroutine_w_minus_1_times_4 = &7e
t_subroutine_w_minus_1_times_8 = &76
t_subroutine_constant_1 = &73
bytes_per_screen_line = &0140
sprite_y_offset_within_row = &75
screen_addr_lo = &00
screen_addr_hi = &01
sprite_addr_hi = &02
sprite_addr_lo = &03
osbyte_inkey = &81
osbyte_clear_escape = &7c

basic_page_msb = &0018
l0070 = &0070
sprite_ptr = &0070
l0071 = &0071
l0072 = &0072
l0073 = &0073
l0074 = &0074
l0075 = &0075
sprite_pixel_x_lo = &0076
l0076 = &0076
sprite_pixel_y_lo = &0077
sprite_pixel_x_hi = &0078
sprite_pixel_y_hi = &0079
screen_ptr = &007a
screen_ptr2 = &007c
l007e = &007e
sprite_ptr2 = &007e
l007f = &007f
ri_a = &0404
ri_b = &0408
ri_q = &0444
ri_w = &045c
ri_x = &0460
ri_y = &0464
ri_z = &0468
osbyte = &fff4

    org &35bc

; TODO: Once we abandon py8dis, we could probably have a beebasm macro
; which will take a single long binary number and split it up,
; allowing the screen to be more visible in the data.
.room_data_01
.pydis_start
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 35bc: 03 03 03... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 35c6: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 35d0: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 35da: 02 00 00... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 35e4: 03 03 03... ...
    equb %10, %11, %11, %11, %11, %11, %11, %11, %11, %00             ; 35ee: 02 03 03... ...
    equb %10, %01, %01, %01, %01, %10, %10, %10, %10, %00             ; 35f8: 02 01 01... ...
    equb %10, %01, %01, %11, %11, %11, %11, %10, %10, %00             ; 3602: 02 01 01... ...
    equb %10, %01, %01, %01, %01, %10, %10, %10, %10, %00             ; 360c: 02 01 01... ...
    equb %10, %01, %01, %11, %01, %10, %11, %10, %10, %01             ; 3616: 02 01 01... ...
    equb %10, %01, %00, %11, %11, %11, %11, %00, %10, %01             ; 3620: 02 01 00... ...
    equb %10, %01, %00, %11, %01, %10, %11, %00, %10, %01             ; 362a: 02 01 00... ...
    equb %10, %01, %10, %11, %11, %11, %11, %01, %10, %01             ; 3634: 02 01 02... ...
    equb %10, %01, %10, %10, %01, %11, %01, %01, %10, %01             ; 363e: 02 01 02... ...
    equb %10, %00, %10, %10, %01, %11, %01, %01, %00, %01             ; 3648: 02 00 02... ...
    equb %10, %00, %10, %10, %01, %11, %01, %01, %00, %01             ; 3652: 02 00 02... ...
    equb %10, %00, %10, %10, %01, %11, %01, %01, %00, %01             ; 365c: 02 00 02... ...
    equb %11, %11, %10, %10, %01, %11, %01, %01, %11, %11             ; 3666: 03 03 02... ...
.room_data_02
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3670: 03 03 03... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 367a: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3684: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 368e: 00 00 00... ...
    equb %11, %11, %00, %00, %00, %00, %00, %00, %00, %00             ; 3698: 03 03 00... ...
    equb %11, %10, %00, %11, %01, %10, %00, %10, %01, %11             ; 36a2: 03 02 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 36ac: 00 00 00... ...
    equb %00, %00, %00, %10, %00, %10, %00, %10, %00, %01             ; 36b6: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 36c0: 00 00 00... ...
    equb %11, %10, %10, %10, %00, %10, %00, %11, %10, %01             ; 36ca: 03 02 02... ...
    equb %11, %00, %00, %00, %00, %00, %00, %01, %00, %01             ; 36d4: 03 00 00... ...
    equb %10, %00, %10, %10, %00, %10, %00, %01, %10, %01             ; 36de: 02 00 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %01, %00, %01             ; 36e8: 02 00 00... ...
    equb %10, %00, %10, %10, %00, %10, %00, %01, %10, %00             ; 36f2: 02 00 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %01, %00, %00             ; 36fc: 02 00 00... ...
    equb %10, %01, %10, %11, %01, %10, %00, %01, %10, %00             ; 3706: 02 01 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %01, %00, %01             ; 3710: 02 00 00... ...
    equb %11, %00, %00, %11, %11, %11, %11, %11, %11, %11             ; 371a: 03 00 00... ...
.room_data_03
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3724: 03 03 03... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 372e: 02 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3738: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3742: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 374c: 00 00 00... ...
    equb %11, %10, %00, %01, %10, %01, %10, %00, %01, %11             ; 3756: 03 02 00... ...
    equb %11, %11, %11, %11, %10, %01, %11, %11, %11, %11             ; 3760: 03 03 03... ...
    equb %11, %10, %00, %11, %10, %01, %11, %00, %00, %11             ; 376a: 03 02 00... ...
    equb %11, %00, %00, %01, %10, %01, %10, %00, %00, %01             ; 3774: 03 00 00... ...
    equb %10, %00, %00, %00, %10, %01, %00, %00, %00, %01             ; 377e: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %01, %00, %00, %00, %01             ; 3788: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3792: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 379c: 02 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 37a6: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 37b0: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 37ba: 00 00 00... ...
    equb %11, %00, %11, %00, %11, %11, %00, %11, %00, %11             ; 37c4: 03 00 03... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 37ce: 03 03 03... ...
.room_data_04
    equb %11, %11, %11, %11, %11, %11, %00, %00, %00, %00             ; 37d8: 03 03 03... ...
    equb %10, %00, %11, %10, %11, %11, %10, %00, %00, %00             ; 37e2: 02 00 03... ...
    equb %00, %00, %01, %10, %01, %10, %11, %00, %00, %01             ; 37ec: 00 00 01... ...
    equb %00, %00, %01, %00, %01, %00, %01, %10, %00, %11             ; 37f6: 00 00 01... ...
    equb %00, %00, %01, %00, %01, %00, %00, %11, %11, %11             ; 3800: 00 00 01... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 380a: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3814: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 381e: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3828: 02 00 00... ...
    equb %10, %00, %11, %10, %11, %10, %00, %11, %00, %00             ; 3832: 02 00 03... ...
    equb %10, %00, %01, %00, %01, %00, %00, %01, %10, %00             ; 383c: 02 00 01... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %11, %11             ; 3846: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %10, %00, %00, %01             ; 3850: 02 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %01, %00, %00, %01             ; 385a: 00 00 00... ...
    equb %00, %00, %00, %01, %00, %00, %00, %10, %00, %01             ; 3864: 00 00 00... ...
    equb %00, %00, %00, %11, %10, %00, %00, %01, %00, %01             ; 386e: 00 00 00... ...
    equb %10, %00, %01, %11, %11, %00, %00, %00, %00, %01             ; 3878: 02 00 01... ...
    equb %11, %11, %11, %11, %11, %11, %10, %00, %01, %11             ; 3882: 03 03 03... ...
.room_data_05
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 388c: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3896: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 38a0: 00 00 00... ...
    equb %01, %00, %00, %01, %10, %01, %00, %01, %00, %01             ; 38aa: 01 00 00... ...
    equb %11, %10, %01, %11, %10, %01, %10, %11, %10, %11             ; 38b4: 03 02 01... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 38be: 03 03 03... ...
    equb %11, %01, %11, %00, %00, %00, %00, %00, %00, %11             ; 38c8: 03 01 03... ...
    equb %10, %00, %10, %00, %00, %00, %00, %00, %00, %01             ; 38d2: 02 00 02... ...
    equb %00, %00, %10, %00, %00, %00, %00, %00, %00, %01             ; 38dc: 00 00 02... ...
    equb %00, %00, %00, %00, %11, %11, %00, %11, %00, %01             ; 38e6: 00 00 00... ...
    equb %00, %00, %00, %00, %01, %10, %00, %00, %00, %11             ; 38f0: 00 00 00... ...
    equb %10, %00, %00, %00, %00, %10, %00, %00, %00, %11             ; 38fa: 02 00 00... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %01, %11             ; 3904: 03 00 00... ...
    equb %10, %00, %00, %01, %00, %00, %00, %00, %11, %01             ; 390e: 02 00 00... ...
    equb %10, %10, %00, %11, %00, %00, %00, %00, %00, %01             ; 3918: 02 02 00... ...
    equb %10, %00, %01, %11, %00, %00, %01, %10, %00, %01             ; 3922: 02 00 01... ...
    equb %11, %00, %11, %11, %11, %00, %11, %11, %00, %11             ; 392c: 03 00 03... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3936: 03 03 03... ...
.room_data_06
    equb %11, %00, %00, %11, %11, %11, %11, %11, %11, %11             ; 3940: 03 00 00... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 394a: 03 00 00... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3954: 03 00 00... ...
    equb %11, %11, %00, %00, %00, %00, %00, %00, %00, %01             ; 395e: 03 03 00... ...
    equb %11, %10, %00, %11, %10, %00, %11, %00, %00, %01             ; 3968: 03 02 00... ...
    equb %11, %00, %00, %11, %00, %00, %01, %00, %00, %01             ; 3972: 03 00 00... ...
    equb %10, %00, %00, %10, %00, %11, %00, %00, %00, %01             ; 397c: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %10, %00, %00, %01, %11             ; 3986: 02 00 00... ...
    equb %10, %00, %00, %00, %10, %00, %11, %00, %00, %11             ; 3990: 02 00 00... ...
    equb %10, %00, %00, %01, %10, %00, %01, %00, %00, %01             ; 399a: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %11, %00, %00, %00, %01             ; 39a4: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %01, %00, %00, %01, %11             ; 39ae: 02 00 00... ...
    equb %10, %00, %00, %00, %11, %00, %00, %00, %00, %11             ; 39b8: 02 00 00... ...
    equb %10, %01, %10, %00, %10, %00, %00, %10, %00, %01             ; 39c2: 02 01 02... ...
    equb %10, %11, %11, %00, %00, %11, %01, %10, %00, %01             ; 39cc: 02 03 03... ...
    equb %10, %00, %00, %00, %00, %01, %00, %00, %00, %01             ; 39d6: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 39e0: 02 00 00... ...
    equb %11, %00, %00, %11, %11, %11, %11, %11, %11, %11             ; 39ea: 03 00 00... ...
.room_data_07
    equb %11, %11, %11, %11, %11, %11, %10, %00, %01, %11             ; 39f4: 03 03 03... ...
    equb %10, %00, %00, %00, %00, %01, %10, %00, %00, %11             ; 39fe: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %10, %00, %00, %01             ; 3a08: 02 00 00... ...
    equb %10, %11, %00, %00, %00, %00, %00, %01, %10, %01             ; 3a12: 02 03 00... ...
    equb %10, %00, %00, %11, %00, %00, %00, %00, %10, %11             ; 3a1c: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %11, %00, %00, %00, %01             ; 3a26: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 3a30: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %01, %00, %00, %11, %11             ; 3a3a: 02 00 00... ...
    equb %10, %00, %10, %00, %10, %00, %00, %00, %00, %11             ; 3a44: 02 00 02... ...
    equb %10, %01, %00, %00, %01, %01, %10, %00, %00, %01             ; 3a4e: 02 01 00... ...
    equb %10, %01, %00, %00, %01, %00, %00, %01, %00, %01             ; 3a58: 02 01 00... ...
    equb %10, %01, %00, %00, %01, %00, %10, %01, %10, %01             ; 3a62: 02 01 00... ...
    equb %10, %01, %00, %00, %01, %00, %00, %00, %00, %01             ; 3a6c: 02 01 00... ...
    equb %10, %01, %10, %10, %11, %00, %10, %00, %00, %01             ; 3a76: 02 01 02... ...
    equb %10, %00, %11, %11, %10, %00, %00, %00, %00, %11             ; 3a80: 02 00 03... ...
    equb %10, %00, %01, %11, %00, %00, %10, %00, %01, %11             ; 3a8a: 02 00 01... ...
    equb %11, %00, %00, %10, %00, %00, %00, %01, %11, %11             ; 3a94: 03 00 00... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3a9e: 03 03 03... ...
.room_data_08
    equb %11, %00, %00, %11, %11, %11, %11, %11, %11, %11             ; 3aa8: 03 00 00... ...
    equb %11, %00, %00, %00, %00, %00, %00, %01, %11, %11             ; 3ab2: 03 00 00... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %11, %11             ; 3abc: 03 00 00... ...
    equb %11, %00, %11, %11, %10, %00, %00, %00, %00, %11             ; 3ac6: 03 00 03... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3ad0: 03 00 00... ...
    equb %11, %00, %00, %01, %10, %00, %00, %00, %00, %01             ; 3ada: 03 00 00... ...
    equb %11, %10, %00, %00, %00, %00, %00, %10, %00, %01             ; 3ae4: 03 02 00... ...
    equb %11, %11, %10, %00, %10, %00, %01, %11, %00, %11             ; 3aee: 03 03 02... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3af8: 03 03 03... ...
    equb %11, %11, %11, %00, %01, %01, %01, %00, %11, %11             ; 3b02: 03 03 03... ...
    equb %11, %11, %00, %00, %00, %01, %01, %00, %00, %11             ; 3b0c: 03 03 00... ...
    equb %11, %10, %00, %00, %00, %00, %01, %00, %00, %01             ; 3b16: 03 02 00... ...
    equb %11, %10, %00, %00, %00, %00, %01, %00, %00, %01             ; 3b20: 03 02 00... ...
    equb %11, %00, %00, %00, %01, %00, %00, %00, %00, %01             ; 3b2a: 03 00 00... ...
    equb %10, %00, %00, %00, %01, %00, %00, %00, %00, %01             ; 3b34: 02 00 00... ...
    equb %10, %00, %00, %00, %01, %01, %00, %00, %00, %11             ; 3b3e: 02 00 00... ...
    equb %10, %00, %00, %00, %01, %01, %01, %00, %11, %11             ; 3b48: 02 00 00... ...
    equb %11, %00, %00, %11, %11, %11, %11, %11, %11, %11             ; 3b52: 03 00 00... ...
.room_data_09
    equb %11, %11, %11, %00, %00, %00, %00, %11, %11, %11             ; 3b5c: 03 03 03... ...
    equb %11, %00, %01, %10, %10, %01, %01, %10, %00, %11             ; 3b66: 03 00 01... ...
    equb %10, %00, %00, %11, %10, %01, %11, %00, %00, %01             ; 3b70: 02 00 00... ...
    equb %10, %00, %00, %10, %10, %01, %01, %00, %00, %01             ; 3b7a: 02 00 00... ...
    equb %10, %00, %00, %10, %11, %11, %01, %01, %01, %11             ; 3b84: 02 00 00... ...
    equb %10, %00, %00, %10, %01, %10, %01, %00, %00, %01             ; 3b8e: 02 00 00... ...
    equb %10, %00, %00, %11, %01, %10, %11, %01, %10, %01             ; 3b98: 02 00 00... ...
    equb %10, %00, %00, %01, %11, %11, %10, %00, %00, %01             ; 3ba2: 02 00 00... ...
    equb %10, %00, %00, %11, %10, %01, %11, %01, %10, %11             ; 3bac: 02 00 00... ...
    equb %10, %00, %00, %10, %00, %00, %01, %00, %00, %01             ; 3bb6: 02 00 00... ...
    equb %10, %00, %00, %11, %00, %00, %11, %00, %00, %11             ; 3bc0: 02 00 00... ...
    equb %10, %00, %00, %01, %10, %01, %10, %00, %00, %01             ; 3bca: 02 00 00... ...
    equb %11, %00, %00, %00, %11, %11, %00, %00, %00, %11             ; 3bd4: 03 00 00... ...
    equb %11, %10, %00, %00, %01, %10, %00, %00, %01, %11             ; 3bde: 03 02 00... ...
    equb %11, %11, %00, %00, %00, %00, %00, %00, %11, %11             ; 3be8: 03 03 00... ...
    equb %11, %11, %11, %00, %00, %00, %00, %11, %11, %11             ; 3bf2: 03 03 03... ...
    equb %11, %11, %11, %10, %00, %00, %01, %11, %11, %11             ; 3bfc: 03 03 03... ...
    equb %11, %11, %11, %11, %00, %00, %11, %11, %11, %11             ; 3c06: 03 03 03... ...
.room_data_10
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3c10: 03 03 03... ...
    equb %10, %00, %00, %01, %11, %00, %11, %10, %01, %11             ; 3c1a: 02 00 00... ...
    equb %11, %11, %10, %00, %10, %00, %01, %00, %00, %11             ; 3c24: 03 03 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3c2e: 02 00 00... ...
    equb %11, %11, %00, %00, %00, %00, %00, %00, %00, %01             ; 3c38: 03 03 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3c42: 02 00 00... ...
    equb %11, %10, %00, %00, %00, %00, %00, %00, %00, %01             ; 3c4c: 03 02 00... ...
    equb %10, %00, %00, %01, %11, %00, %11, %10, %00, %01             ; 3c56: 02 00 00... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %11, %01             ; 3c60: 03 00 00... ...
    equb %10, %00, %01, %00, %00, %00, %00, %00, %00, %01             ; 3c6a: 02 00 01... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %01, %11             ; 3c74: 03 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3c7e: 02 00 00... ...
    equb %11, %00, %00, %10, %10, %00, %01, %00, %00, %11             ; 3c88: 03 00 00... ...
    equb %10, %00, %00, %00, %11, %00, %11, %00, %00, %01             ; 3c92: 02 00 00... ...
    equb %11, %10, %01, %11, %11, %00, %11, %11, %10, %01             ; 3c9c: 03 02 01... ...
    equb %10, %00, %00, %11, %10, %00, %01, %11, %00, %00             ; 3ca6: 02 00 00... ...
    equb %11, %10, %01, %10, %00, %00, %00, %01, %10, %00             ; 3cb0: 03 02 01... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3cba: 03 03 03... ...
.room_data_11
    equb %11, %00, %00, %11, %11, %11, %11, %11, %11, %11             ; 3cc4: 03 00 00... ...
    equb %11, %00, %00, %01, %00, %00, %00, %00, %00, %00             ; 3cce: 03 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3cd8: 02 00 00... ...
    equb %10, %00, %11, %00, %00, %00, %00, %00, %00, %00             ; 3ce2: 02 00 03... ...
    equb %10, %00, %00, %00, %00, %00, %01, %10, %01, %11             ; 3cec: 02 00 00... ...
    equb %10, %00, %11, %11, %00, %01, %11, %11, %11, %11             ; 3cf6: 02 00 03... ...
    equb %10, %00, %00, %01, %00, %00, %00, %00, %00, %01             ; 3d00: 02 00 00... ...
    equb %11, %00, %11, %11, %10, %00, %00, %00, %00, %01             ; 3d0a: 03 00 03... ...
    equb %11, %00, %00, %01, %11, %00, %00, %00, %00, %01             ; 3d14: 03 00 00... ...
    equb %10, %00, %11, %11, %11, %11, %10, %01, %00, %11             ; 3d1e: 02 00 03... ...
    equb %10, %00, %00, %01, %00, %00, %00, %00, %00, %01             ; 3d28: 02 00 00... ...
    equb %11, %00, %11, %11, %00, %00, %00, %00, %00, %11             ; 3d32: 03 00 03... ...
    equb %11, %00, %00, %01, %00, %01, %10, %01, %11, %11             ; 3d3c: 03 00 00... ...
    equb %11, %10, %01, %11, %10, %00, %11, %11, %11, %11             ; 3d46: 03 02 01... ...
    equb %00, %00, %00, %01, %00, %00, %00, %00, %00, %00             ; 3d50: 00 00 00... ...
    equb %00, %00, %01, %11, %11, %00, %00, %00, %00, %00             ; 3d5a: 00 00 01... ...
    equb %00, %00, %00, %01, %00, %00, %00, %00, %00, %00             ; 3d64: 00 00 00... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3d6e: 03 03 03... ...
.room_data_12
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3d78: 03 03 03... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %01, %11             ; 3d82: 00 00 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 3d8c: 00 00 00... ...
    equb %00, %00, %10, %10, %00, %00, %10, %10, %00, %01             ; 3d96: 00 00 02... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3da0: 03 00 00... ...
    equb %10, %00, %10, %10, %00, %00, %10, %10, %00, %01             ; 3daa: 02 00 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 3db4: 02 00 00... ...
    equb %11, %00, %10, %10, %00, %00, %10, %10, %01, %11             ; 3dbe: 03 00 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3dc8: 02 00 00... ...
    equb %10, %00, %10, %10, %10, %10, %10, %10, %00, %00             ; 3dd2: 02 00 02... ...
    equb %11, %00, %00, %00, %00, %00, %00, %00, %00, %00             ; 3ddc: 03 00 00... ...
    equb %10, %00, %10, %10, %10, %10, %10, %10, %01, %11             ; 3de6: 02 00 02... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 3df0: 02 00 00... ...
    equb %11, %00, %10, %10, %00, %00, %00, %00, %00, %01             ; 3dfa: 03 00 02... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3e04: 00 00 00... ...
    equb %00, %00, %10, %10, %00, %00, %00, %00, %00, %11             ; 3e0e: 00 00 02... ...
    equb %00, %00, %00, %00, %00, %00, %00, %00, %01, %11             ; 3e18: 00 00 00... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3e22: 03 03 03... ...
.room_data_13
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3e2c: 03 03 03... ...
    equb %11, %00, %00, %11, %00, %00, %11, %00, %00, %11             ; 3e36: 03 00 00... ...
    equb %10, %00, %00, %01, %00, %00, %10, %00, %00, %01             ; 3e40: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3e4a: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3e54: 02 00 00... ...
    equb %10, %01, %11, %00, %11, %00, %00, %00, %00, %01             ; 3e5e: 02 01 03... ...
    equb %10, %00, %00, %00, %00, %00, %11, %00, %00, %11             ; 3e68: 02 00 00... ...
    equb %11, %01, %10, %01, %10, %00, %00, %00, %01, %11             ; 3e72: 03 01 02... ...
    equb %00, %00, %00, %00, %00, %00, %01, %10, %00, %01             ; 3e7c: 00 00 00... ...
    equb %00, %01, %00, %00, %00, %00, %00, %00, %00, %01             ; 3e86: 00 01 00... ...
    equb %00, %00, %00, %00, %00, %00, %00, %11, %00, %01             ; 3e90: 00 00 00... ...
    equb %11, %01, %00, %00, %00, %00, %00, %00, %01, %11             ; 3e9a: 03 01 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %11             ; 3ea4: 02 00 00... ...
    equb %10, %00, %00, %11, %10, %01, %11, %00, %00, %01             ; 3eae: 02 00 00... ...
    equb %10, %00, %00, %01, %00, %00, %10, %00, %00, %01             ; 3eb8: 02 00 00... ...
    equb %10, %00, %00, %01, %00, %00, %10, %00, %00, %01             ; 3ec2: 02 00 00... ...
    equb %11, %00, %00, %11, %10, %01, %11, %00, %00, %11             ; 3ecc: 03 00 00... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3ed6: 03 03 03... ...
.room_data_14
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3ee0: 03 03 03... ...
    equb %11, %10, %00, %00, %01, %10, %00, %00, %11, %11             ; 3eea: 03 02 00... ...
    equb %11, %00, %00, %00, %11, %11, %00, %00, %00, %11             ; 3ef4: 03 00 00... ...
    equb %10, %00, %00, %00, %01, %10, %00, %00, %00, %11             ; 3efe: 02 00 00... ...
    equb %10, %00, %00, %01, %11, %11, %10, %00, %00, %01             ; 3f08: 02 00 00... ...
    equb %10, %00, %00, %01, %11, %11, %10, %00, %00, %01             ; 3f12: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3f1c: 02 00 00... ...
    equb %10, %00, %00, %00, %00, %00, %00, %00, %00, %01             ; 3f26: 02 00 00... ...
    equb %00, %00, %00, %01, %11, %11, %10, %11, %00, %01             ; 3f30: 00 00 00... ...
    equb %00, %00, %01, %01, %11, %11, %10, %00, %00, %11             ; 3f3a: 00 00 01... ...
    equb %00, %00, %00, %00, %01, %10, %00, %00, %00, %01             ; 3f44: 00 00 00... ...
    equb %10, %00, %01, %00, %01, %10, %00, %00, %00, %11             ; 3f4e: 02 00 01... ...
    equb %11, %00, %00, %00, %11, %11, %00, %11, %00, %01             ; 3f58: 03 00 00... ...
    equb %11, %10, %01, %00, %01, %10, %00, %00, %00, %11             ; 3f62: 03 02 01... ...
    equb %11, %11, %00, %00, %01, %10, %00, %00, %00, %01             ; 3f6c: 03 03 00... ...
    equb %11, %11, %11, %00, %01, %10, %00, %00, %01, %11             ; 3f76: 03 03 03... ...
    equb %11, %11, %11, %10, %01, %10, %00, %00, %11, %11             ; 3f80: 03 03 03... ...
    equb %11, %11, %11, %11, %11, %11, %11, %11, %11, %11             ; 3f8a: 03 03 03... ...
.something
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 3f94: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 3fa8: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 3fbc: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 3fd0: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 3fe4: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0                                       ; 3ff8: 00 00 00... ...
.sprite_00
    equb &cc, &ee, &aa, &aa, &aa, &aa, &aa, &aa,   0,   0,   0,   0   ; 4000: cc ee aa... ...
    equb   0,   0, &ff, &aa,   0,   0,   0,   0,   0,   0, &88, &88   ; 400c: 00 00 ff... ...
    equb &aa, &aa, &aa, &aa, &aa, &aa, &ee, &cc, &aa, &aa, &88, &88   ; 4018: aa aa aa... ...
    equb &88, &88, &88, &cc, &88, &88, &88, &88, &88, &88, &88, &88   ; 4024: 88 88 88... ...
    equb &60, &70, &50, &50, &50, &50, &50, &50,   0,   0,   0,   0   ; 4030: 60 70 50... `pP
    equb   0,   0, &70, &50,   0,   0,   0,   0,   0,   0, &c0, &40   ; 403c: 00 00 70... ..p
    equb &50, &50, &50, &50, &50, &50, &70, &60, &50, &50, &40, &40   ; 4048: 50 50 50... PPP
    equb &40, &40, &40, &60, &40, &40, &40, &40, &40, &40, &40, &40   ; 4054: 40 40 40... @@@
    equb   3,   3,   2,   2,   2,   2,   2,   2,   0,   8,   8,   8   ; 4060: 03 03 02... ...
    equb   8,   8, &0b, &0a,   0,   0,   0,   0,   0,   0, &0e, &0a   ; 406c: 08 08 0b... ...
    equb   2,   2,   2,   2,   2,   2,   3,   3, &0a, &0a, &0a, &0a   ; 4078: 02 02 02... ...
    equb &0a, &0a, &0a,   3, &0a, &0a,   2,   2,   2,   2,   2,   2   ; 4084: 0a 0a 0a... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4090: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 409c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 40a8: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 40b4: 00 00 00... ...
.sprite_08
    equb   3,   3, &17, &33, &33, &12, &21, &43,   8, &0c, &80, &88   ; 40c0: 03 03 17... ...
    equb   0,   8,   8,   8,   0,   0,   0,   0,   0,   0,   0,   0   ; 40cc: 00 08 08... ...
    equb &31,   3, &30,   3, &87, &87, &80,   0, &6a,   8, &80, &86   ; 40d8: 31 03 30... 1.0
    equb &0e, &38,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 40e4: 0e 38 00... .8.
    equb   1,   1,   3, &11, &11,   1, &10, &10, &0c, &0e, &c8, &cc   ; 40f0: 01 01 03... ...
    equb &88, &84, &0c, &0c,   0,   0,   0,   0,   0,   0,   0,   0   ; 40fc: 88 84 0c... ...
    equb   1,   1, &10,   1,   3, &43, &60,   0, &c4, &0c, &c0, &48   ; 4108: 01 01 10... ...
    equb &0e,   6,   6, &30,   0,   0,   0,   0,   0,   0,   0,   0   ; 4114: 0e 06 06... ...
    equb   0,   0,   1,   0,   0,   0,   0,   0, &0e, &0f, &6c, &ee   ; 4120: 00 00 01... ...
    equb &cc, &4a, &4a, &4a,   0,   0,   0,   0,   0,   0,   0,   0   ; 412c: cc 4a 4a... .JJ
    equb   0,   0,   0,   0,   0,   0,   0,   0, &2e, &0e, &e0, &2c   ; 4138: 00 00 00... ...
    equb &0e, &0e, &0e, &f0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4144: 0e 0e 0e... ...
    equb   0,   0,   0,   0,   0,   0,   0, &10,   7,   7, &3e, &77   ; 4150: 00 00 00... ...
    equb &66, &25, &a5, &25,   0,   8,   0,   0,   0,   0,   0,   0   ; 415c: 66 25 a5... f%.
    equb &11,   0,   0,   0,   0, &10, &10,   0, &16,   7, &70, &16   ; 4168: 11 00 00... ...
    equb &0f, &0d, &81,   0, &88,   0,   0,   0,   8,   8,   8, &c0   ; 4174: 0f 0d 81... ...
.sprite_09
    equb   0,   1,   0,   0,   0,   0,   0,   0, &0e, &0e, &c7, &ee   ; 4180: 00 01 00... ...
    equb &66, &4a, &2c, &1e,   0,   0,   0,   0,   0,   0,   0,   0   ; 418c: 66 4a 2c... fJ,
    equb &32,   0,   0,   3,   3, &60,   0,   0, &6c, &0e, &e0, &86   ; 4198: 32 00 00... 2..
    equb &0f, &0f,   0,   0,   0,   0,   0,   0, &80, &80, &80,   0   ; 41a4: 0f 0f 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   7, &0f, &63, &77   ; 41b0: 00 00 00... ...
    equb &33, &25, &16, &16,   0,   0,   8,   0,   0,   0,   0,   0   ; 41bc: 33 25 16... 3%.
    equb   0,   0,   0,   0,   0,   0,   0, &10, &65,   7, &70, &43   ; 41c8: 00 00 00... ...
    equb &0f, &0d, &0c, &80,   0,   0,   0,   0,   8, &48, &c0,   0   ; 41d4: 0f 0d 0c... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   3,   7, &31, &33   ; 41e0: 00 00 00... ...
    equb &11, &12, &12, &12,   8,   8, &0c, &88, &88,   8,   8,   8   ; 41ec: 11 12 12... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &23,   3, &30, &21   ; 41f8: 00 00 00... ...
    equb   3,   3,   3, &70,   8,   8, &80,   8,   8,   8,   8, &80   ; 4204: 03 03 03... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   1,   3, &10, &11   ; 4210: 00 00 00... ...
    equb   0,   1,   1,   1, &0c, &0c, &8e, &cc, &cc, &84, &a4, &94   ; 421c: 00 01 01... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &32,   1, &10, &10   ; 4228: 00 00 00... ...
    equb   3,   3,   3, &60, &1d, &0c, &c0, &0c, &0e, &16, &30,   0   ; 4234: 03 03 03... ...
.sprite_10
    equb   4, &0e,   7,   3,   7,   7, &1e, &16, &40, &80, &e0, &b4   ; 4240: 04 0e 07... ...
    equb &a4, &f0, &c0, &c8,   0,   0,   0,   0,   0,   0,   0,   0   ; 424c: a4 f0 c0... ...
    equb &16, &16, &1e, &18, &10, &30, &20,   4, &c8, &c6, &c0, &e0   ; 4258: 16 16 1e... ...
    equb &a0, &21,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4264: a0 21 00... .!.
    equb   2,   3,   3,   1,   3,   3,   3,   1, &20, &40, &78, &5a   ; 4270: 02 03 03... ...
    equb &5a, &78, &e0, &e4,   0,   0,   0, &80,   0, &80,   0,   0   ; 427c: 5a 78 e0... Zx.
    equb   1,   1,   3,   2,   0,   0, &10,   1, &e4, &c6, &e0, &e0   ; 4288: 01 01 03... ...
    equb &f0, &f0, &90,   0,   0,   0,   0,   0,   0,   0,   8,   0   ; 4294: f0 f0 90... ...
    equb   1,   0,   0,   0,   0,   0,   1,   0, &10, &28, &3c, &2d   ; 42a0: 01 00 00... ...
    equb &25, &3c, &78, &72,   0,   0, &80, &c0, &c0, &80,   0,   0   ; 42ac: 25 3c 78... %<x
    equb   0,   0,   0,   1,   0,   0,   0,   0, &7a, &7a, &2d, &34   ; 42b8: 00 00 00... ...
    equb &30, &30, &30,   3,   0,   0,   0,   0,   0,   0,   0,   0   ; 42c4: 30 30 30... 000
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0, &14, &16, &12   ; 42d0: 00 00 00... ...
    equb &16, &12, &30, &31, &80,   0, &c0, &68, &68, &c0, &80, &80   ; 42dc: 16 12 30... ..0
    equb   0,   0,   0,   0,   0,   0,   0,   0, &35, &35, &16, &16   ; 42e8: 00 00 00... ...
    equb &30, &30, &60,   4, &80,   8, &80, &80, &80, &c0, &40,   4   ; 42f4: 30 30 60... 00`
.sprite_11
    equb &10,   0, &30, &61, &21, &70, &10, &10,   1, &83, &87, &86   ; 4300: 10 00 30... ..0
    equb &87, &87, &c3, &cb,   0,   8,   0,   0,   0,   0,   8,   0   ; 430c: 87 87 c3... ...
    equb &10, &13, &10, &30, &20, &24,   0,   0, &cb, &c3, &c3, &c0   ; 4318: 10 13 10... ...
    equb &c0, &60, &20,   1,   0,   0,   8,   8,   0,   0,   0,   0   ; 4324: c0 60 20... .`
    equb   0,   0, &10, &30, &10, &30,   0,   0, &80, &41, &c3, &4b   ; 4330: 00 00 10... ...
    equb &4b, &c3, &e1, &e5,   8,   8,   8,   0,   8,   8,   8,   0   ; 433c: 4b c3 e1... K..
    equb   0,   0,   0,   0, &10, &10, &12,   0, &e5, &6d, &e1, &e0   ; 4348: 00 00 00... ...
    equb &e0, &e0, &30,   1,   0,   0,   8,   8,   0,   0,   0,   0   ; 4354: e0 e0 30... ..0
    equb   0,   0,   0, &10, &10,   0,   0,   0, &40, &20, &e1, &a5   ; 4360: 00 00 00... ...
    equb &a5, &e1, &70, &72,   4,   8,   8,   8,   0,   8, &0c,   0   ; 436c: a5 e1 70... ..p
    equb   0,   0,   0,   0,   0,   0,   0,   0, &72, &72, &25, &61   ; 4378: 00 00 00... ...
    equb &60, &60, &60,   6,   8,   8,   8,   4,   0,   0,   0,   0   ; 4384: 60 60 60... ```
    equb   0,   0,   0,   0,   0,   0,   0,   0, &20, &10, &70, &d2   ; 4390: 00 00 00... ...
    equb &d2, &70, &30, &31,   0,   4, &0c,   8, &0c,   8, &80, &80   ; 439c: d2 70 30... .p0
    equb   0,   0,   0,   0,   0,   0,   0,   0, &31, &13, &30, &30   ; 43a8: 00 00 00... ...
    equb &30, &70, &40,   4, &84, &84, &0c, &0c, &80, &80, &c0,   4   ; 43b4: 30 70 40... 0p@
.sprite_12
    equb   0,   0,   0,   0,   8, &7f, &ff, &ff,   0,   0,   0,   0   ; 43c0: 00 00 00... ...
    equb &0e, &af, &0f, &0e,   0,   0,   0,   0,   0,   0,   8,   0   ; 43cc: 0e af 0f... ...
    equb &ef, &cc, &88,   0,   0,   0,   0,   0, &0c, &0c,   7,   2   ; 43d8: ef cc 88... ...
    equb   0,   0,   0,   0,   0,   0,   0,   8,   0,   0,   0,   0   ; 43e4: 00 00 00... ...
    equb   0,   0,   0,   0,   4, &37, &77, &77,   0,   0,   0,   0   ; 43f0: 00 00 00... ...
    equb   7, &df, &8f, &0f,   0,   0,   0,   0,   0,   8, &0c,   0   ; 43fc: 07 df 8f... ...
    equb &44,   0,   0,   0,   0,   0,   0,   0, &0e,   6,   3,   1   ; 4408: 44 00 00... D..
    equb   0,   0,   0,   0,   0,   0,   8,   4,   0,   0,   0,   0   ; 4414: 00 00 00... ...
    equb   0, &22, &33, &33, &33, &13, &13,   1,   0,   0,   0, &88   ; 4420: 00 22 33... ."3
    equb &cf, &ef, &cf, &0f,   0,   0,   0,   0,   8, &8c, &0e,   8   ; 442c: cf ef cf... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   7,   3,   1,   0   ; 4438: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0, &0c, &0c,   0,   0,   0,   0   ; 4444: 00 00 00... ...
    equb   0,   0,   0,   0, &11,   1,   1,   0,   0,   0,   0,   0   ; 4450: 00 00 00... ...
    equb &ef, &ff, &6f, &0f,   0,   0,   0,   0, &0c, &4e, &0f, &0c   ; 445c: ef ff 6f... ..o
    equb   0,   0,   0,   0,   0,   0,   0,   0,   3,   1,   0,   0   ; 4468: 00 00 00... ...
    equb   0,   0,   0,   0,   8,   8, &0e,   6,   0,   0,   0,   0   ; 4474: 00 00 00... ...
.sprite_13
    equb   0,   0,   0,   0,   3, &27, &0f,   3,   0,   0,   0,   0   ; 4480: 00 00 00... ...
    equb   8, &ff, &7f, &7f,   0,   0,   0,   0,   8,   8, &88, &88   ; 448c: 08 ff 7f... ...
    equb   1,   1,   7, &0a,   0,   0,   0,   0, &3f, &19,   0,   0   ; 4498: 01 01 07... ...
    equb   0,   0,   0,   0, &88, &88, &88,   0,   0,   0,   0,   0   ; 44a4: 00 00 00... ...
    equb   0,   0,   0,   0,   1, &13,   7,   1,   0,   0,   0,   0   ; 44b0: 00 00 00... ...
    equb &0c, &7f, &3f, &1f,   0,   0,   0,   0,   4, &8c, &cc, &cc   ; 44bc: 0c 7f 3f... ..?
    equb   0,   0,   3,   5,   0,   0,   0,   0, &0e, &0c,   8,   0   ; 44c8: 00 00 03... ...
    equb   0,   0,   0,   0, &44,   0,   0,   0,   0,   0,   0,   0   ; 44d4: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   1,   3,   0,   0,   0,   0,   0   ; 44e0: 00 00 00... ...
    equb &1f, &bf, &1f, &0f,   0, &22, &66, &ee, &ee, &ce, &ce, &0c   ; 44ec: 1f bf 1f... ...
    equb   0,   0,   1,   1,   0,   0,   0,   0,   7,   6, &0c,   8   ; 44f8: 00 00 01... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4504: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   0,   0   ; 4510: 00 00 00... ...
    equb   7, &5f, &0f,   7,   0,   0,   0,   0, &ff, &ef, &cf, &0e   ; 451c: 07 5f 0f... ._.
    equb   0,   0,   0,   0,   0,   0,   0,   0,   3,   3, &0e, &0c   ; 4528: 00 00 00... ...
    equb   0,   0,   0,   0,   8,   0,   0,   0,   0,   0,   0,   0   ; 4534: 00 00 00... ...
.sprite_14
    equb &10, &10,   1, &16,   7, &0f, &0d,   9, &40, &c0, &84, &c3   ; 4540: 10 10 01... ...
    equb &87, &0f, &0d, &0c,   0,   0,   0,   0,   0,   8,   8,   8   ; 454c: 87 0f 0d... ...
    equb   1,   3,   2,   3,   2,   0,   0,   0,   4,   6,   2,   6   ; 4558: 01 03 02... ...
    equb   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4564: 02 00 00... ...
    equb   0,   0,   0,   7,   7,   1,   0,   0, &a0, &e0, &ea, &e1   ; 4570: 00 00 00... ...
    equb &4b, &0f, &0e, &0e,   0,   0,   0, &0c, &0c,   0,   0,   0   ; 457c: 4b 0f 0e... K..
    equb   0,   1,   1,   1,   1,   0,   0,   0, &0a, &0b,   1,   9   ; 4588: 00 01 01... ...
    equb   3,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4594: 03 01 00... ...
    equb   0,   2,   3,   3,   1,   0,   0,   0, &50, &70, &75, &78   ; 45a0: 00 02 03... ...
    equb &2d, &0f,   7,   7,   0,   2,   6, &0e, &0c,   8,   0,   0   ; 45ac: 2d 0f 07... -..
    equb   0,   0,   0,   0,   0,   0,   0,   0, &0d,   8, &0d,   8   ; 45b8: 00 00 00... ...
    equb   0,   0,   0,   0,   8,   8,   8,   8,   0,   0,   0,   0   ; 45c4: 00 00 00... ...
    equb   0,   0,   0,   1,   1,   0,   0,   0, &20, &30, &10, &3c   ; 45d0: 00 00 00... ...
    equb &1e,   7,   3,   3, &80, &80,   0, &87, &0f, &0c,   8,   8   ; 45dc: 1e 07 03... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   6,   4,   4,   6   ; 45e8: 00 00 00... ...
    equb   4,   0,   0,   0, &0c,   4, &0c,   4,   0,   0,   0,   0   ; 45f4: 04 00 00... ...
.sprite_15
    equb   0, &33, &21, &77, &25, &ff, &88, &8b,   0, &ee, &a4, &ff   ; 4600: 00 33 21... .3!
    equb &a4, &ff, &88, &8b,   0,   0,   0,   0,   0, &88, &88, &88   ; 460c: a4 ff 88... ...
    equb &8b, &ff, &25, &77, &21, &33,   0,   0, &8b, &ff, &a5, &ff   ; 4618: 8b ff 25... ..%
    equb &a4, &ee,   0,   0, &88, &88,   0,   0,   0,   0,   0,   0   ; 4624: a4 ee 00... ...
    equb   0, &11,   1, &33, &21, &77, &66, &66,   0, &ff, &a5, &ff   ; 4630: 00 11 01... ...
    equb &a5, &ff, &22, &2e,   0,   0,   0, &88, &80, &cc,   0, &0c   ; 463c: a5 ff 22... .."
    equb &66, &77, &21, &33,   1, &11,   0,   0, &2e, &ff, &a5, &ff   ; 4648: 66 77 21... fw!
    equb &a5, &ff,   0,   0, &0c, &cc, &80, &88,   0,   0,   0,   0   ; 4654: a5 ff 00... ...
    equb   0,   0,   0, &11,   1, &33, &11, &13,   0, &ff, &a5, &ff   ; 4660: 00 00 00... ...
    equb &a5, &ff, &88, &8b,   0, &88, &80, &cc, &84, &ee, &88, &8a   ; 466c: a5 ff 88... ...
    equb &13, &33,   1, &11,   0,   0,   0,   0, &8b, &ff, &a5, &ff   ; 4678: 13 33 01... .3.
    equb &a5, &ff,   0,   0, &8a, &ee, &84, &cc, &80, &88,   0,   0   ; 4684: a5 ff 00... ...
    equb   0,   0,   0,   0,   0, &11,   0,   0,   0, &77, &25, &ff   ; 4690: 00 00 00... ...
    equb &a5, &ff, &22, &2e,   0, &cc, &84, &ee, &a4, &ff, &33, &3f   ; 469c: a5 ff 22... .."
    equb   0, &11,   0,   0,   0,   0,   0,   0, &2e, &ff, &a5, &ff   ; 46a8: 00 11 00... ...
    equb &25, &77,   0,   0, &3f, &ff, &a4, &ee, &84, &cc,   0,   0   ; 46b4: 25 77 00... %w.
.sprite_16
    equb   0,   0,   0,   0,   0,   0, &11, &22,   0,   0,   0,   0   ; 46c0: 00 00 00... ...
    equb   0,   0, &44, &22,   0,   0,   0,   0,   0,   0,   0,   0   ; 46cc: 00 00 44... ..D
    equb &22, &33, &23, &23, &23, &33, &11, &11, &aa, &ee, &ae, &ae   ; 46d8: 22 33 23... "3#
    equb &ae, &ee, &4c, &cc,   0,   0,   0,   0,   0,   0,   0,   0   ; 46e4: ae ee 4c... ..L
    equb   0,   0,   0,   0,   0,   0,   0, &33,   0,   0,   0,   0   ; 46f0: 00 00 00... ...
    equb   0,   0,   0, &11,   0,   0,   0,   0,   0,   0,   0, &88   ; 46fc: 00 00 00... ...
    equb &44, &11, &11, &11, &11,   0,   0,   0, &ee, &5f, &5f, &5f   ; 4708: 44 11 11... D..
    equb &bf, &ae, &ee, &44, &44,   0,   0,   0,   0,   0,   0,   0   ; 4714: bf ae ee... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4720: 00 00 00... ...
    equb   0,   0,   0, &33,   0,   0,   0,   0,   0,   0,   0,   0   ; 472c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0, &65, &ad, &ad, &ad   ; 4738: 00 00 00... ...
    equb &ad, &ad, &65, &33, &88, &c4, &c4, &c4, &c4, &c4, &88,   0   ; 4744: ad ad 65... ..e
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4750: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 475c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0, &11, &11, &33, &23, &76   ; 4768: 00 00 00... ...
    equb &47, &fc, &8f, &ff,   0, &88, &88, &cc, &4c, &e6, &2e, &ff   ; 4774: 47 fc 8f... G..
.sprite_17
    equb   0,   0, &11, &36, &35, &3c, &2c, &2c,   0,   0, &c4, &eb   ; 4780: 00 00 11... ...
    equb &e5, &e9, &a1, &a1,   0,   0,   0,   0,   0,   8,   8,   8   ; 478c: e5 e9 a1... ...
    equb &3c, &3c, &34, &16,   3, &10,   0,   0, &e1, &e1, &e1, &c3   ; 4798: 3c 3c 34... <<4
    equb &86, &c0,   0,   0,   8,   8,   0,   0,   0,   0,   0,   0   ; 47a4: 86 c0 00... ...
    equb   0,   0,   0, &13, &12, &16, &16, &16,   0,   0, &ea, &f5   ; 47b0: 00 00 00... ...
    equb &fa, &f4, &50, &50,   0,   0,   0,   8,   8, &0c, &0c, &0c   ; 47bc: fa f4 50... ..P
    equb &16, &16, &12,   3,   1,   0,   0,   0, &f0, &f0, &f0, &e1   ; 47c8: 16 16 12... ...
    equb &4b, &e0,   0,   0, &0c, &0c,   8,   8,   0,   0,   0,   0   ; 47d4: 4b e0 00... K..
    equb   0,   0,   0,   1,   1,   3,   3,   3,   0,   0, &75, &fa   ; 47e0: 00 00 00... ...
    equb &f5, &f2, &a0, &a0,   0,   0,   0, &8c, &84, &86, &86, &86   ; 47ec: f5 f2 a0... ...
    equb   3,   3,   1,   1,   0,   0,   0,   0, &f0, &f0, &f0, &78   ; 47f8: 03 03 01... ...
    equb &2d, &70,   0,   0, &86, &86, &84, &0c,   8,   0,   0,   0   ; 4804: 2d 70 00... -p.
    equb   0,   0,   0,   0,   0,   1,   1,   1,   0,   0, &32, &7d   ; 4810: 00 00 00... ...
    equb &7a, &79, &58, &58,   0,   0, &88, &c6, &ca, &c3, &43, &43   ; 481c: 7a 79 58... zyX
    equb   1,   1,   0,   0,   0,   0,   0,   0, &78, &78, &78, &3c   ; 4828: 01 01 00... ...
    equb &16, &30,   0,   0, &c3, &c3, &c2, &86, &0c, &80,   0,   0   ; 4834: 16 30 00... .0.
.sprite_18
    equb   8,   8,   8, &0a,   2,   2,   2,   0, &0a, &0a, &0a,   8   ; 4840: 08 08 08... ...
    equb   8,   2,   2,   2,   0,   0,   0,   0,   0,   0,   0,   0   ; 484c: 08 02 02... ...
    equb   8,   8, &0a, &0a,   8,   8, &0a,   2, &0a, &0a, &0a, &0a   ; 4858: 08 08 0a... ...
    equb   8,   8,   2,   2,   0,   0,   0,   0,   0,   0,   0,   0   ; 4864: 08 08 02... ...
    equb   2,   2,   2,   2,   0,   0,   0,   0,   2,   2,   2, &0a   ; 4870: 02 02 02... ...
    equb &0a,   8,   8,   0,   8,   8,   8,   0,   0,   8,   8,   8   ; 487c: 0a 08 08... ...
    equb   2,   2,   2,   2,   2,   2,   2,   0,   2,   2, &0a, &0a   ; 4888: 02 02 02... ...
    equb   2,   2,   8,   8,   8,   8,   8,   8,   0,   0,   8,   8   ; 4894: 02 02 08... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   8,   8,   8, &0a   ; 48a0: 00 00 00... ...
    equb   2,   2,   2,   0, &0a, &0a, &0a,   8,   8,   2,   2,   2   ; 48ac: 02 02 02... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   8,   8, &0a, &0a   ; 48b8: 00 00 00... ...
    equb   8,   8, &0a,   2, &0a, &0a, &0a, &0a,   8,   8,   2,   2   ; 48c4: 08 08 0a... ...
    equb   1,   1,   1,   0,   0,   1,   1,   1,   2,   2,   2,   2   ; 48d0: 01 01 01... ...
    equb   0,   0,   0,   0,   2,   2,   2, &0a, &0a,   8,   8,   0   ; 48dc: 00 00 00... ...
    equb   1,   1,   1,   1,   0,   0,   1,   1,   2,   2,   2,   2   ; 48e8: 01 01 01... ...
    equb   2,   2,   2,   0,   2,   2, &0a, &0a,   2,   2,   8,   8   ; 48f4: 02 02 02... ...
.sprite_19
    equb   0, &30, &61, &c3, &c3, &f0, &f1, &f1,   0, &c0, &48, &2c   ; 4900: 00 30 61... .0a
    equb &2c, &3c, &f0, &71,   0,   0,   0,   0,   0,   0,   0,   0   ; 490c: 2c 3c f0... ,<.
    equb &e0, &e0, &c0, &e2, &f0, &f0, &f0, &70, &55,   0,   0, &99   ; 4918: e0 e0 c0... ...
    equb &b8, &f0, &e0, &e0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4924: b8 f0 e0... ...
    equb   0, &10, &30, &61, &61, &70, &70, &70,   0, &e0, &2c, &1e   ; 4930: 00 10 30... ..0
    equb &1e, &96, &f8, &b8,   0,   0,   0,   0,   0, &80, &80, &88   ; 493c: 1e 96 f8... ...
    equb &70, &70, &60, &71, &70, &70, &70, &30, &22,   0,   0, &44   ; 4948: 70 70 60... pp`
    equb &d4, &f0, &f0, &f0, &88,   0,   0, &88, &80, &80,   0,   0   ; 4954: d4 f0 f0... ...
    equb   0,   0, &10, &30, &30, &30, &30, &30,   0, &f0, &96, &0f   ; 4960: 00 00 10... ...
    equb &0f, &c3, &f4, &d4,   0,   0,   0, &80, &80, &c0, &c0, &c4   ; 496c: 0f c3 f4... ...
    equb &30, &30, &30, &30, &30, &30, &30, &10, &91, &80,   0, &aa   ; 4978: 30 30 30... 000
    equb &e2, &f0, &f0, &f0, &44,   0,   0, &44, &c0, &c0, &80, &80   ; 4984: e2 f0 f0... ...
    equb   0,   0,   0, &10, &10, &10, &10, &10,   0, &70, &c3, &87   ; 4990: 00 00 00... ...
    equb &87, &e1, &f2, &e2,   0, &80, &80, &48, &48, &68, &e0, &e2   ; 499c: 87 e1 f2... ...
    equb &10, &10, &10, &10, &10, &10, &10,   0, &c0, &c0, &80, &d5   ; 49a8: 10 10 10... ...
    equb &f1, &f0, &f0, &f0, &aa,   0,   0, &22, &60, &e0, &c0, &c0   ; 49b4: f1 f0 f0... ...
.sprite_20
    equb   0, &10, &10, &21, &21, &61, &70, &74,   0, &e0, &3c, &1e   ; 49c0: 00 10 10... ...
    equb &1e, &78, &f4, &74,   0,   0,   0, &80, &80, &80, &80, &80   ; 49cc: 1e 78 f4... .x.
    equb &55,   0,   0, &44, &60, &70, &30, &30, &30, &30, &10, &ba   ; 49d8: 55 00 00... U..
    equb &f8, &f0, &f0, &f0, &80, &80, &80, &80, &80, &80, &80,   0   ; 49e4: f8 f0 f0... ...
    equb   0,   0,   0, &10, &10, &30, &30, &32,   0, &f0, &96, &0f   ; 49f0: 00 00 00... ...
    equb &0f, &3c, &f2, &b2,   0,   0, &80, &c0, &c0, &c0, &c0, &c0   ; 49fc: 0f 3c f2... .<.
    equb &22,   0,   0, &22, &30, &30, &10, &10, &98, &10,   0, &55   ; 4a08: 22 00 00... "..
    equb &74, &f0, &f0, &f0, &c0, &c0, &c0, &c0, &c0, &c0, &c0, &80   ; 4a14: 74 f0 f0... t..
    equb   0,   0,   0,   0,   0, &10, &10, &11,   0, &70, &43, &87   ; 4a20: 00 00 00... ...
    equb &87, &96, &f1, &d1,   0, &80, &c0, &68, &68, &e0, &e0, &e0   ; 4a2c: 87 96 f1... ...
    equb &11,   0,   0, &11, &10, &10,   0,   0, &44,   0,   0, &22   ; 4a38: 11 00 00... ...
    equb &b2, &f0, &f0, &f0, &e0, &e0, &60, &e8, &e0, &e0, &e0, &c0   ; 4a44: b2 f0 f0... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0, &30, &21, &43   ; 4a50: 00 00 00... ...
    equb &43, &c3, &f0, &e8,   0, &c0, &68, &3c, &3c, &f0, &f8, &f8   ; 4a5c: 43 c3 f0... C..
    equb   0,   0,   0,   0,   0,   0,   0,   0, &aa,   0,   0, &99   ; 4a68: 00 00 00... ...
    equb &d1, &f0, &70, &70, &70, &70, &30, &74, &f0, &f0, &f0, &e0   ; 4a74: d1 f0 70... ..p
.sprite_21
    equb   0,   0, &10, &51, &73, &67, &cf, &8f,   0,   0, &40, &dc   ; 4a80: 00 00 10... ...
    equb &fe, &3f, &1f, &8f,   0,   0,   0,   0,   0,   0, &88, &88   ; 4a8c: fe 3f 1f... .?.
    equb &8f, &cf, &67, &73, &51, &10,   0,   0, &8f, &1f, &3f, &fe   ; 4a98: 8f cf 67... ..g
    equb &dc, &40,   0,   0, &88, &88,   0,   0,   0,   0,   0,   0   ; 4aa4: dc 40 00... .@.
    equb   0,   0,   0,   0, &31, &33, &67, &47,   0,   0,   0, &ee   ; 4ab0: 00 00 00... ...
    equb &f5, &ff, &0f, &4f,   0,   0,   0,   0, &80, &88, &cc, &4c   ; 4abc: f5 ff 0f... ...
    equb &47, &67, &33, &31, &20,   0,   0,   0, &4f, &0f, &1f, &ff   ; 4ac8: 47 67 33... Gg3
    equb &ee, &a0,   0,   0, &4c, &cc, &88, &80, &80,   0,   0,   0   ; 4ad4: ee a0 00... ...
    equb   0,   0,   0,   0,   0, &11, &33, &32,   0,   0,   0, &77   ; 4ae0: 00 00 00... ...
    equb &ff, &ff, &fa, &fa,   0,   0,   0,   0, &88, &cc, &ee, &ea   ; 4aec: ff ff fa... ...
    equb &23, &33, &11, &10, &10,   0,   0,   0, &2f, &0f, &8f, &ff   ; 4af8: 23 33 11... #3.
    equb &77, &50,   0,   0, &2e, &6e, &cc, &c8, &40,   0,   0,   0   ; 4b04: 77 50 00... wP.
    equb   0,   0,   0,   0,   0,   0, &11, &11,   0,   0,   0, &33   ; 4b10: 00 00 00... ...
    equb &77, &ff, &ff, &ff,   0,   0,   0, &88, &cc, &ee, &ff, &ff   ; 4b1c: 77 ff ff... w..
    equb &11, &11,   0,   0,   0,   0,   0,   0, &ff, &ff, &f7, &f5   ; 4b28: 11 11 00... ...
    equb &b1, &20,   0,   0, &ff, &ff, &ec, &e4, &a0, &80,   0,   0   ; 4b34: b1 20 00... . .
.sprite_22
    equb   5,   9, &19, &0d, &0e, &0f, &0f, &0f,   5,   4, &4c, &0d   ; 4b40: 05 09 19... ...
    equb &0b,   7, &0f, &0f,   0,   8,   8,   8,   8,   8,   8,   8   ; 4b4c: 0b 07 0f... ...
    equb &0f, &0f, &3c, &1c, &1c, &18, &14, &30, &0f, &0f, &e1, &41   ; 4b58: 0f 0f 3c... ..<
    equb &41, &40, &41, &e0,   8,   8,   8,   8,   8,   8,   0,   0   ; 4b64: 41 40 41... A@A
    equb   2,   4,   4,   6,   7,   7,   7,   7, &0a, &0a, &ae, &0e   ; 4b70: 02 04 04... ...
    equb   5, &0b, &0f, &0f,   8,   4,   4, &0c, &0c, &0c, &0c, &0c   ; 4b7c: 05 0b 0f... ...
    equb   7,   7, &16,   6,   6,   4,   2, &10, &0f, &0f, &f0, &a0   ; 4b88: 07 07 16... ...
    equb &a0, &a0, &a0, &f0, &0c, &0c, &0c, &0c, &0c,   4,   8,   0   ; 4b94: a0 a0 a0... ...
    equb   1,   2,   2,   3,   3,   3,   3,   3,   5,   5, &57,   7   ; 4ba0: 01 02 02... ...
    equb &0a, &0d, &0f, &0f,   4,   2,   2,   6, &0e, &0e, &0e, &0e   ; 4bac: 0a 0d 0f... ...
    equb   3,   3,   3,   3,   3,   2,   1,   0, &0f, &0f, &f0, &50   ; 4bb8: 03 03 03... ...
    equb &50, &50, &50, &f0, &0e, &0e, &86,   6,   6,   2,   4, &80   ; 4bc4: 50 50 50... PPP
    equb   0,   1,   1,   1,   1,   1,   1,   1, &0a,   2, &23, &0b   ; 4bd0: 00 01 01... ...
    equb &0d, &0e, &0f, &0f, &0a,   9, &89, &0b,   7, &0f, &0f, &0f   ; 4bdc: 0d 0e 0f... ...
    equb   1,   1,   1,   1,   1,   1,   0,   0, &0f, &0f, &78, &28   ; 4be8: 01 01 01... ...
    equb &28, &20, &28, &70, &0f, &0f, &c3, &83, &83, &81, &82, &c0   ; 4bf4: 28 20 28... ( (
.sprite_23
    equb &10, &30, &21, &70, &70, &b4, &f0, &b4, &c0, &e0, &e0, &f0   ; 4c00: 10 30 21... .0!
    equb &f0, &f0, &f0, &f0,   0,   0,   0,   0,   0, &80, &80, &80   ; 4c0c: f0 f0 f0... ...
    equb &b4, &f0, &d2, &52, &52, &30, &30, &10, &f0, &f0, &f0, &f0   ; 4c18: b4 f0 d2... ...
    equb &f0, &68, &e0, &c0, &80, &80, &80,   0,   0,   0,   0,   0   ; 4c24: f0 68 e0... .h.
    equb   0, &10, &10, &30, &30, &70, &70, &70, &e0, &f0, &78, &f0   ; 4c30: 00 10 10... ...
    equb &f0, &78, &f0, &78,   0,   0,   0, &80, &80, &c0, &c0, &c0   ; 4c3c: f0 78 f0... .x.
    equb &70, &70, &70, &30, &30, &10, &10,   0, &78, &f0, &b4, &b4   ; 4c48: 70 70 70... ppp
    equb &b4, &b4, &f0, &e0, &c0, &c0, &c0, &80, &80,   0,   0,   0   ; 4c54: b4 b4 f0... ...
    equb   0,   0,   0, &10, &10, &30, &30, &30, &70, &f0, &d2, &f0   ; 4c60: 00 00 00... ...
    equb &f0, &e1, &f0, &e1,   0, &80, &80, &c0, &c0, &e0, &e0, &e0   ; 4c6c: f0 e1 f0... ...
    equb &30, &30, &30, &10, &10,   0,   0,   0, &e1, &f0, &e1, &e1   ; 4c78: 30 30 30... 000
    equb &e1, &d2, &f0, &70, &e0, &e0, &e0, &c0, &c0, &80, &80,   0   ; 4c84: e1 d2 f0... ...
    equb   0,   0,   0,   0,   0, &10, &10, &10, &30, &70, &61, &f0   ; 4c90: 00 00 00... ...
    equb &f0, &f0, &f0, &f0, &80, &c0, &c0, &e0, &e0, &b4, &f0, &d2   ; 4c9c: f0 f0 f0... ...
    equb &10, &10, &10,   0,   0,   0,   0,   0, &f0, &f0, &f0, &f0   ; 4ca8: 10 10 10... ...
    equb &f0, &61, &70, &30, &d2, &f0, &b4, &a4, &68, &c0, &c0, &80   ; 4cb4: f0 61 70... .ap
.sprite_24
    equb   0, &11, &33, &77, &77, &dd, &ff, &ff,   0, &cc, &ee, &77   ; 4cc0: 00 11 33... ..3
    equb &77, &ff, &dd, &dd,   0,   0,   0,   0,   0, &88, &88, &88   ; 4ccc: 77 ff dd... w..
    equb &dd, &dd, &ff, &77, &77, &33, &11,   0, &ff, &ff, &77, &77   ; 4cd8: dd dd ff... ...
    equb &ff, &ee, &cc,   0, &88, &88, &88,   0,   0,   0,   0,   0   ; 4ce4: ff ee cc... ...
    equb   0,   0, &11, &33, &33, &77, &66, &77,   0, &ee, &ff, &ee   ; 4cf0: 00 00 11... ...
    equb &aa, &ff, &ff, &ff,   0,   0,   0, &88, &88, &cc, &cc, &cc   ; 4cfc: aa ff ff... ...
    equb &77, &77, &66, &22, &33, &11,   0,   0, &bb, &bb, &ee, &ee   ; 4d08: 77 77 66... wwf
    equb &ff, &ff, &ee,   0, &cc, &cc, &cc, &88, &88,   0,   0,   0   ; 4d14: ff ff ee... ...
    equb   0,   0,   0, &11, &11, &33, &33, &33,   0, &77, &ff, &ff   ; 4d20: 00 00 00... ...
    equb &77, &ff, &dd, &ff,   0,   0, &88, &cc, &44, &ee, &ee, &ee   ; 4d2c: 77 ff dd... w..
    equb &33, &33, &33, &11, &11,   0,   0,   0, &77, &77, &dd, &dd   ; 4d38: 33 33 33... 333
    equb &ff, &ff, &77,   0, &66, &66, &ee, &cc, &cc, &88,   0,   0   ; 4d44: ff ff 77... ..w
    equb   0,   0,   0,   0,   0, &11, &11, &11,   0, &33, &77, &ff   ; 4d50: 00 00 00... ...
    equb &ee, &ff, &ff, &ff,   0, &88, &cc, &ee, &ee, &ff, &bb, &ff   ; 4d5c: ee ff ff... ...
    equb &11, &11, &11,   0,   0,   0,   0,   0, &ee, &66, &ff, &ff   ; 4d68: 11 11 11... ...
    equb &ff, &77, &33,   0, &ff, &ff, &bb, &aa, &ee, &cc, &88,   0   ; 4d74: ff 77 33... .w3
.sprite_25
    equb &ff, &df, &df, &ca, &ca, &ca, &ca, &ca, &6d, &65, &65, &65   ; 4d80: ff df df... ...
    equb &65, &65, &65, &65,   0,   0,   0,   0,   0,   0,   0,   0   ; 4d8c: 65 65 65... eee
    equb &ca, &ca, &ca, &ca, &ca, &df, &df, &ff, &65, &65, &65, &65   ; 4d98: ca ca ca... ...
    equb &67, &67, &77, &7f,   0,   0,   0,   0,   0, &88, &88, &88   ; 4da4: 67 67 77... ggw
    equb &15, &15, &15, &15, &15, &15, &15, &15, &ef, &ae, &ae, &84   ; 4db0: 15 15 15... ...
    equb &84, &84, &84, &84, &c8, &c8, &c8, &c8, &c8, &c8, &c8, &c8   ; 4dbc: 84 84 84... ...
    equb &15, &15, &15, &15, &15, &37, &77, &77, &84, &84, &84, &84   ; 4dc8: 15 15 15... ...
    equb &84, &ae, &ae, &ef, &c8, &c8, &c8, &c8, &cc, &cc, &cc, &cc   ; 4dd4: 84 ae ae... ...
    equb &32, &32, &32, &32, &32, &32, &32, &32, &3b, &3b, &3b, &3a   ; 4de0: 32 32 32... 222
    equb &3a, &3a, &3a, &3a, &ce, &4c, &4c,   8,   8,   8,   8,   8   ; 4dec: 3a 3a 3a... :::
    equb &32, &32, &32, &32, &33, &33, &33, &33, &3a, &3a, &3a, &3a   ; 4df8: 32 32 32... 222
    equb &3a, &7f, &ff, &ff,   8,   8,   8,   8,   8, &4c, &4c, &ce   ; 4e04: 3a 7f ff... :..
    equb &11, &11, &11,   0,   0,   0,   0,   0, &6d, &65, &65, &65   ; 4e10: 11 11 11... ...
    equb &65, &65, &65, &65, &77, &67, &67, &65, &65, &65, &65, &65   ; 4e1c: 65 65 65... eee
    equb   0,   0,   0,   0,   0, &11, &11, &11, &65, &65, &65, &65   ; 4e28: 00 00 00... ...
    equb &67, &67, &77, &7f, &65, &65, &65, &65, &65, &ef, &ef, &ff   ; 4e34: 67 67 77... ggw
; TODO: This appears to be mode 5 graphics data showing '< 1 > Load '
; (just *LOAD World1c 5800 to see this), so this is almost certainly
; junk/a build artefact/spare space.
.sprite_end
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4e40: 00 00 00... ...
    equb   0,   0,   0,   0,   0, &11                                 ; 4e4c: 00 00 00... ...
    equs "3f3"                                                        ; 4e52: 33 66 33    3f3
    equb &11,   0,   0, &cc, &88,   0,   0,   0, &88, &cc,   0,   0   ; 4e55: 11 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4e61: 00 00 00... ...
    equb   0,   0,   0, &11, &33, &11, &11, &11, &11, &77,   0, &88   ; 4e6d: 00 00 00... ...
    equb &88, &88, &88, &88, &88, &ee,   0,   0,   0,   0,   0,   0   ; 4e79: 88 88 88... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, &33   ; 4e85: 00 00 00... ...
    equb &11,   0,   0,   0, &11, &33,   0,   0, &88, &cc, &66, &cc   ; 4e91: 11 00 00... ...
    equb &88,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4e9d: 88 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0                            ; 4ea9: 00 00 00... ...
    equs "``````p"                                                    ; 4eb0: 60 60 60... ```
    equb   0,   0,   0,   0,   0,   0,   0, &e0,   0,   0,   0        ; 4eb7: 00 00 00... ...
    equs "0```0"                                                      ; 4ec2: 30 60 60... 0``
    equb   0,   0,   0, &c0                                           ; 4ec7: 00 00 00... ...
    equs "```"                                                        ; 4ecb: 60 60 60    ```
    equb &c0,   0,   0,   0, &30,   0                                 ; 4ece: c0 00 00... ...
    equs "0`0"                                                        ; 4ed4: 30 60 30    0`0
    equb   0,   0,   0, &c0, &60, &e0, &60, &e0,   0,   0,   0        ; 4ed7: 00 00 00... ...
    equs "0```0"                                                      ; 4ee2: 30 60 60... 0``
    equb   0, &60, &60, &e0                                           ; 4ee7: 00 60 60... .``
    equs "```"                                                        ; 4eeb: 60 60 60    ```
    equb &e0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 4eee: e0 00 00... ...
    equb   0,   0,   0,   0,   0,   0                                 ; 4efa: 00 00 00... ...
; Based on how this is called by world-2.bas, I infer that it is a
; collision detection subroutine which returns with X% indicating what
; was collided with, or 0 if nothing. The code here appears to return
; values in Y% and Z% but I don't think they are used by the game. W%
; on entry is probably the sprite we are checking for collisions with;
; world-2.bas always sets it to the current player sprite. Y% on entry
; is the maximum 1-based sprite slot to check for collisions;
; world-2.bas always sets it to 8.
.q_subroutine
    lda ri_w                                                          ; 4f00: ad 5c 04    .\.
    beq q_subroutine_no_collision_found                               ; 4f03: f0 61       .a
    cmp #max_sprite_num+1                                             ; 4f05: c9 31       .1
    bcs q_subroutine_no_collision_found                               ; 4f07: b0 5d       .]
    sec                                                               ; 4f09: 38          8
    sbc #1                                                            ; 4f0a: e9 01       ..
    asl a                                                             ; 4f0c: 0a          .
    tax                                                               ; 4f0d: aa          .
    asl a                                                             ; 4f0e: 0a          .
    tay                                                               ; 4f0f: a8          .
; We have X=(W%-1)*2, Y=(W%-1)*4. X retains this value for the entire
; subroutine. Y's value is only used if the beq
; q_subroutine_next_candidate branch is taken on the first pass round
; q_subroutine_y_loop.
    lda sprite_screen_and_data_addrs+screen_addr_hi,y                 ; 4f10: b9 01 56    ..V
    beq q_subroutine_no_collision_found                               ; 4f13: f0 51       .Q
    stx q_subroutine_sprite_to_check_x2                               ; 4f15: 86 71       .q
    lda ri_y                                                          ; 4f17: ad 64 04    .d.
    beq q_subroutine_no_collision_found                               ; 4f1a: f0 4a       .J
    cmp #max_sprite_num+1                                             ; 4f1c: c9 31       .1
    bcs q_subroutine_no_collision_found                               ; 4f1e: b0 46       .F
    sec                                                               ; 4f20: 38          8
    sbc #1                                                            ; 4f21: e9 01       ..
    asl a                                                             ; 4f23: 0a          .
    sta q_subroutine_max_candidate_sprite_x2                          ; 4f24: 85 70       .p
    lda #0                                                            ; 4f26: a9 00       ..
; Don't test for collision of W% with itself!
; TODO: If W%=1 on entry, the first pass round the q_subroutine_y_loop
; will take the beq, but Y doesn't yet contain the loop variable
; (because of our shuffling in and out of A). As it happens, we will
; get away with this because Y will be (W%-1)*4=0, so it does
; effectively contain the loop variable 'by chance'. This isn't a big
; deal, but I'm noting it as may want to double-check this
; understanding before trying to avoid the Y-A shuffle. Actually I
; think there is another bug here, if (say) W%=3 and Y%=4 on entry,
; the loop will get stuck with A=4 and Y=2, because the increment of Y
; will never happen because of the Y-A shuffle. As long as W%>Y% on
; entry - which it is in the game - this can't happen.
; TODO: I suspect we could avoid shuffling Y into A and just do
; iny:iny and change some cmp to cpy
; &4f28 referenced 1 time by &4f64
.q_subroutine_y_loop
    cmp q_subroutine_sprite_to_check_x2                               ; 4f28: c5 71       .q
    beq q_subroutine_next_candidate                                   ; 4f2a: f0 31       .1
    tay                                                               ; 4f2c: a8          .
    lda #5                                                            ; 4f2d: a9 05       ..
    sta l0074                                                         ; 4f2f: 85 74       .t
    lda sprite_pixel_coord_table_xy,x                                 ; 4f31: bd 60 57    .`W
    sec                                                               ; 4f34: 38          8
    sbc sprite_pixel_coord_table_xy,y                                 ; 4f35: f9 60 57    .`W
; TODO: Isn't this BMI unreliable? What if we did 0-140=-140=116, for
; example? Or 150-0? Wouldn't the correct test be BCC? In practice
; this works fine for values in the range 0-159 inclusive; I wrote a
; program to test all cases, but I have some vague flickering in my
; brain that says this is semi-obvious if you think about it. I think
; it might still be true the state of the carry when we're negating is
; sometimes wrong, but maybe it's not, and at worst it will cause an
; extra pixel of 'fuzz' in the collision detection.
    bmi q_subroutine_sprite_to_check_x_lt_candidate_x                 ; 4f38: 30 35       05
    beq q_subroutine_test_abs_x_difference                            ; 4f3a: f0 02       ..
; sprite to check's X co-ordinate is >= candidate sprite's X co-
; ordinate.
    dec l0074                                                         ; 4f3c: c6 74       .t
; &4f3e referenced 2 times by &4f3a, &4f75
.q_subroutine_test_abs_x_difference
    cmp #9                                                            ; 4f3e: c9 09       ..
    bcs q_subroutine_next_candidate                                   ; 4f40: b0 1b       ..
; abs(sprite_to_check.x - candidate_sprite.x) < 9 (TODO: subject to
; concerns about bugs in other TODOs), so we consider the sprites to
; be overlapping in X and we need to check Y.
    sta q_subroutine_abs_x_difference                                 ; 4f42: 85 72       .r
; TODO: same concerns as for X about this not working for some values.
    lda sprite_pixel_coord_table_xy+1,x                               ; 4f44: bd 61 57    .aW
    sec                                                               ; 4f47: 38          8
    sbc sprite_pixel_coord_table_xy+1,y                               ; 4f48: f9 61 57    .aW
    bmi q_subroutine_sprite_to_check_y_lt_candidate_y                 ; 4f4b: 30 2a       0*
    beq q_subroutine_test_abs_y_difference                            ; 4f4d: f0 06       ..
; sprite_pixel_coord_table_xy+1,x > sprite_pixel_coord_table_xy+1,y
; (TODO: assuming unsigned)
    inc l0074                                                         ; 4f4f: e6 74       .t
    inc l0074                                                         ; 4f51: e6 74       .t
    inc l0074                                                         ; 4f53: e6 74       .t
; &4f55 referenced 2 times by &4f4d, &4f81
.q_subroutine_test_abs_y_difference
    cmp #&10                                                          ; 4f55: c9 10       ..
    bcs q_subroutine_next_candidate                                   ; 4f57: b0 04       ..
; abs(sprite_to_check.y - candidate_sprite.y) < 16 (TODO: subject to
; concerns about bugs), so these two sprites overlap and we're done.
    sta q_subroutine_abs_y_difference                                 ; 4f59: 85 73       .s
    bcc q_subroutine_q_subroutine_collision_found                     ; 4f5b: 90 26       .&             ; always branch
; &4f5d referenced 3 times by &4f2a, &4f40, &4f57
.q_subroutine_next_candidate
    cpy q_subroutine_max_candidate_sprite_x2                          ; 4f5d: c4 70       .p
    beq q_subroutine_no_collision_found                               ; 4f5f: f0 05       ..
    tya                                                               ; 4f61: 98          .
    adc #2                                                            ; 4f62: 69 02       i.
    bne q_subroutine_y_loop                                           ; 4f64: d0 c2       ..             ; always branch
; Set X% and Y% to 0 to indicate no collision found.
; &4f66 referenced 6 times by &4f03, &4f07, &4f13, &4f1a, &4f1e, &4f5f
.q_subroutine_no_collision_found
    lda #0                                                            ; 4f66: a9 00       ..
    sta ri_x                                                          ; 4f68: 8d 60 04    .`.
    sta ri_y                                                          ; 4f6b: 8d 64 04    .d.
    rts                                                               ; 4f6e: 60          `

; Set A=-A
; &4f6f referenced 1 time by &4f38
.q_subroutine_sprite_to_check_x_lt_candidate_x
    eor #&ff                                                          ; 4f6f: 49 ff       I.
; TODO: As written, don't we need a clc here? I am not convinced C
; will always be implicitly clear (e.g. if we did 150-0 at &4f31 - N
; would be set, but there's no borrow so C will still be set).
    adc #1                                                            ; 4f71: 69 01       i.
    inc l0074                                                         ; 4f73: e6 74       .t
    bne q_subroutine_test_abs_x_difference                            ; 4f75: d0 c7       ..             ; always branch
; Set A=-A (TODO: same 'clc needed' concern as for X)
; &4f77 referenced 1 time by &4f4b
.q_subroutine_sprite_to_check_y_lt_candidate_y
    eor #&ff                                                          ; 4f77: 49 ff       I.
    adc #1                                                            ; 4f79: 69 01       i.
    dec l0074                                                         ; 4f7b: c6 74       .t
    dec l0074                                                         ; 4f7d: c6 74       .t
    dec l0074                                                         ; 4f7f: c6 74       .t
    bne q_subroutine_test_abs_y_difference                            ; 4f81: d0 d2       ..             ; always branch
; Set Y% to 35-(abs_x_difference*2)-abs_y_difference, so (roughly) Y%
; indicates how much the sprites are overlapping - it will range from
; 4 if both differences are as large as possible up to 35 if the two
; sprites coincide perfectly. world-2.bas doesn't seem to use this.
; &4f83 referenced 1 time by &4f5b
.q_subroutine_q_subroutine_collision_found
    lda q_subroutine_abs_x_difference                                 ; 4f83: a5 72       .r
    asl a                                                             ; 4f85: 0a          .
    adc q_subroutine_abs_y_difference                                 ; 4f86: 65 73       es
    sta l0073                                                         ; 4f88: 85 73       .s
    lda #&23 ; '#'                                                    ; 4f8a: a9 23       .#
    sec                                                               ; 4f8c: 38          8
    sbc l0073                                                         ; 4f8d: e5 73       .s
    sta ri_y                                                          ; 4f8f: 8d 64 04    .d.
; Set Z% to TODO: some number indicating something about the
; collision. world-2.bas doesn't appear to use this, although I'm not
; currently absolutely certain of this.
    lda l0074                                                         ; 4f92: a5 74       .t
    sta ri_z                                                          ; 4f94: 8d 68 04    .h.
; Set X% to the 1-based logical sprite number we found a collision
; with.
    iny                                                               ; 4f97: c8          .
    iny                                                               ; 4f98: c8          .
    tya                                                               ; 4f99: 98          .
    lsr a                                                             ; 4f9a: 4a          J
    sta ri_x                                                          ; 4f9b: 8d 60 04    .`.
; &4f9e referenced 1 time by &4fa4
.q_subroutine_rts
    rts                                                               ; 4f9e: 60          `

; TODO: Dead code?
.r_subroutine
    lda ri_x                                                          ; 4f9f: ad 60 04    .`.
    cmp #4                                                            ; 4fa2: c9 04       ..
    bcs q_subroutine_rts                                              ; 4fa4: b0 f8       ..
    ldx #5                                                            ; 4fa6: a2 05       ..
    stx l0075                                                         ; 4fa8: 86 75       .u
    ldy #&ff                                                          ; 4faa: a0 ff       ..
    ldx r_subroutine_inkey_code_1                                     ; 4fac: ae f0 57    ..W
    lda #osbyte_inkey                                                 ; 4faf: a9 81       ..
    jsr osbyte                                                        ; 4fb1: 20 f4 ff     ..
    cpy #&1b                                                          ; 4fb4: c0 1b       ..
    beq c5002                                                         ; 4fb6: f0 4a       .J
    inx                                                               ; 4fb8: e8          .
    bne c4fbd                                                         ; 4fb9: d0 02       ..
    inc l0075                                                         ; 4fbb: e6 75       .u
; &4fbd referenced 1 time by &4fb9
.c4fbd
    lda #osbyte_inkey                                                 ; 4fbd: a9 81       ..
    ldx r_subroutine_inkey_code_2                                     ; 4fbf: ae f1 57    ..W
    ldy #&ff                                                          ; 4fc2: a0 ff       ..
    jsr osbyte                                                        ; 4fc4: 20 f4 ff     ..
    cpy #&1b                                                          ; 4fc7: c0 1b       ..
    beq c5002                                                         ; 4fc9: f0 37       .7
    inx                                                               ; 4fcb: e8          .
    bne c4fd0                                                         ; 4fcc: d0 02       ..
    dec l0075                                                         ; 4fce: c6 75       .u
; &4fd0 referenced 1 time by &4fcc
.c4fd0
    lda ri_x                                                          ; 4fd0: ad 60 04    .`.
    lsr a                                                             ; 4fd3: 4a          J
    beq c4fdc                                                         ; 4fd4: f0 06       ..
    lda l0075                                                         ; 4fd6: a5 75       .u
    cmp #5                                                            ; 4fd8: c9 05       ..
    bne c501f                                                         ; 4fda: d0 43       .C
; &4fdc referenced 1 time by &4fd4
.c4fdc
    lda #osbyte_inkey                                                 ; 4fdc: a9 81       ..
    ldx r_subroutine_inkey_code_3                                     ; 4fde: ae f2 57    ..W
    ldy #&ff                                                          ; 4fe1: a0 ff       ..
    jsr osbyte                                                        ; 4fe3: 20 f4 ff     ..
    cpy #&1b                                                          ; 4fe6: c0 1b       ..
    beq c5002                                                         ; 4fe8: f0 18       ..
    inx                                                               ; 4fea: e8          .
    bne c4ff4                                                         ; 4feb: d0 07       ..
    lda l0075                                                         ; 4fed: a5 75       .u
    sec                                                               ; 4fef: 38          8
    sbc #3                                                            ; 4ff0: e9 03       ..
    sta l0075                                                         ; 4ff2: 85 75       .u
; &4ff4 referenced 1 time by &4feb
.c4ff4
    lda #osbyte_inkey                                                 ; 4ff4: a9 81       ..
    ldx r_subroutine_inkey_code_4                                     ; 4ff6: ae f3 57    ..W
    ldy #&ff                                                          ; 4ff9: a0 ff       ..
    jsr osbyte                                                        ; 4ffb: 20 f4 ff     ..
    cpy #&1b                                                          ; 4ffe: c0 1b       ..
    bne c5008                                                         ; 5000: d0 06       ..
; &5002 referenced 3 times by &4fb6, &4fc9, &4fe8
.c5002
    lda #osbyte_clear_escape                                          ; 5002: a9 7c       .|
    jsr osbyte                                                        ; 5004: 20 f4 ff     ..
    rts                                                               ; 5007: 60          `

; &5008 referenced 1 time by &5000
.c5008
    inx                                                               ; 5008: e8          .
    bne c5012                                                         ; 5009: d0 07       ..
    lda l0075                                                         ; 500b: a5 75       .u
    clc                                                               ; 500d: 18          .
    adc #3                                                            ; 500e: 69 03       i.
    sta l0075                                                         ; 5010: 85 75       .u
; &5012 referenced 1 time by &5009
.c5012
    lda ri_x                                                          ; 5012: ad 60 04    .`.
    and #1                                                            ; 5015: 29 01       ).
    bne c502b                                                         ; 5017: d0 12       ..
    lda l0075                                                         ; 5019: a5 75       .u
    cmp #5                                                            ; 501b: c9 05       ..
    beq c5026                                                         ; 501d: f0 07       ..
; &501f referenced 3 times by &4fda, &5029, &502d
.c501f
    sta r_subroutine_foo                                              ; 501f: 8d f4 57    ..W
    sta ri_z                                                          ; 5022: 8d 68 04    .h.
; &5025 referenced 2 times by &5036, &503a
.s_subroutine_rts
    rts                                                               ; 5025: 60          `

; TODO: Dead code?
; &5026 referenced 1 time by &501d
.c5026
    lda r_subroutine_foo                                              ; 5026: ad f4 57    ..W
    bne c501f                                                         ; 5029: d0 f4       ..
; &502b referenced 1 time by &5017
.c502b
    lda l0075                                                         ; 502b: a5 75       .u
    bne c501f                                                         ; 502d: d0 f0       ..
; &502f referenced 3 times by &5044, &504e, &5055
.clc_remove_sprite_from_screen
    clc                                                               ; 502f: 18          .
    jmp remove_sprite_from_screen                                     ; 5030: 4c e5 50    L.P

; Entered with a sprite slot number in W%.
; 
; If Y%=2 or slot W% has invalid coordinates, if the sprite is on on
; screen and is eor-plotted to remove it and
; sprite_screen_and_data_addrs updated to reflect this. This is a no-
; op if the sprite is not on screen.
; 
; If Y% is not 2, the sprite is eor-plotted at its new position and
; sprite_screen_and_data_addrs updated to reflect this. If Y% is also
; not 1, the sprite is eor-plotted at its old position.
; 
; Effectively Y%=1 means 'show sprite', Y%=0 means 'move sprite' and
; Y%=2 means 'remove sprite'.
; &5033 referenced 1 time by &5374
.s_subroutine
    lda ri_w                                                          ; 5033: ad 5c 04    .\.
    beq s_subroutine_rts                                              ; 5036: f0 ed       ..
    cmp #&31 ; '1'                                                    ; 5038: c9 31       .1
    bcs s_subroutine_rts                                              ; 503a: b0 e9       ..
    sec                                                               ; 503c: 38          8
    sbc #1                                                            ; 503d: e9 01       ..
    ldx ri_y                                                          ; 503f: ae 64 04    .d.
    cpx #2                                                            ; 5042: e0 02       ..
    beq clc_remove_sprite_from_screen                                 ; 5044: f0 e9       ..
    jsr get_sprite_details                                            ; 5046: 20 1c 51     .Q
    lda sprite_pixel_coord_table_xy,x                                 ; 5049: bd 60 57    .`W
    cmp #&fe                                                          ; 504c: c9 fe       ..
    bcs clc_remove_sprite_from_screen                                 ; 504e: b0 df       ..
    lda sprite_pixel_coord_table_xy+1,x                               ; 5050: bd 61 57    .aW
    cmp #2                                                            ; 5053: c9 02       ..
    bcc clc_remove_sprite_from_screen                                 ; 5055: 90 d8       ..
    lda sprite_pixel_y_lo                                             ; 5057: a5 77       .w
    tax                                                               ; 5059: aa          .
    lsr a                                                             ; 505a: 4a          J
    lsr a                                                             ; 505b: 4a          J
    and #&fe                                                          ; 505c: 29 fe       ).
    tay                                                               ; 505e: a8          .
    txa                                                               ; 505f: 8a          .
    and #7                                                            ; 5060: 29 07       ).
    eor #7                                                            ; 5062: 49 07       I.
    sta sprite_y_offset_within_row                                    ; 5064: 85 75       .u
    lda screen_y_addr_table,y                                         ; 5066: b9 c0 56    ..V
    clc                                                               ; 5069: 18          .
    adc sprite_y_offset_within_row                                    ; 506a: 65 75       eu
    sta screen_ptr                                                    ; 506c: 85 7a       .z
    lda screen_y_addr_table+1,y                                       ; 506e: b9 c1 56    ..V
    adc #0                                                            ; 5071: 69 00       i.
    sta screen_ptr+1                                                  ; 5073: 85 7b       .{
    lda #0                                                            ; 5075: a9 00       ..
    sta l0073                                                         ; 5077: 85 73       .s
    lda sprite_pixel_x_lo                                             ; 5079: a5 76       .v
    asl a                                                             ; 507b: 0a          .
    rol l0073                                                         ; 507c: 26 73       &s
    and #&f8                                                          ; 507e: 29 f8       ).
    adc screen_ptr                                                    ; 5080: 65 7a       ez
    sta screen_ptr                                                    ; 5082: 85 7a       .z
    lda screen_ptr+1                                                  ; 5084: a5 7b       .{
    adc l0073                                                         ; 5086: 65 73       es
    sta screen_ptr+1                                                  ; 5088: 85 7b       .{
    ldx l0074                                                         ; 508a: a6 74       .t
    lda sprite_screen_and_data_addrs+screen_addr_lo,x                 ; 508c: bd 00 56    ..V
    sta screen_ptr2                                                   ; 508f: 85 7c       .|
    lda sprite_screen_and_data_addrs+screen_addr_hi,x                 ; 5091: bd 01 56    ..V
    sta screen_ptr2+1                                                 ; 5094: 85 7d       .}
    lda screen_ptr                                                    ; 5096: a5 7a       .z
    sta sprite_screen_and_data_addrs+screen_addr_lo,x                 ; 5098: 9d 00 56    ..V
    lda screen_ptr+1                                                  ; 509b: a5 7b       .{
    sta sprite_screen_and_data_addrs+screen_addr_hi,x                 ; 509d: 9d 01 56    ..V
    lda sprite_pixel_x_lo                                             ; 50a0: a5 76       .v
    and #3                                                            ; 50a2: 29 03       ).
    asl a                                                             ; 50a4: 0a          .
    asl a                                                             ; 50a5: 0a          .
    asl a                                                             ; 50a6: 0a          .
    asl a                                                             ; 50a7: 0a          .
    sta l0073                                                         ; 50a8: 85 73       .s
    asl a                                                             ; 50aa: 0a          .
    adc l0073                                                         ; 50ab: 65 73       es
    adc sprite_screen_and_data_addrs+sprite_addr_lo,x                 ; 50ad: 7d 03 56    }.V
    sta l0070                                                         ; 50b0: 85 70       .p
    lda sprite_screen_and_data_addrs+sprite_addr_hi,x                 ; 50b2: bd 02 56    ..V
    adc #0                                                            ; 50b5: 69 00       i.
    sta l0071                                                         ; 50b7: 85 71       .q
    lda ri_y                                                          ; 50b9: ad 64 04    .d.
    cmp #1                                                            ; 50bc: c9 01       ..
    beq clc_jmp_sprite_core                                           ; 50be: f0 21       .!
    lda screen_ptr2+1                                                 ; 50c0: a5 7d       .}
    beq clc_jmp_sprite_core                                           ; 50c2: f0 1d       ..
    lda l0072                                                         ; 50c4: a5 72       .r
    and #3                                                            ; 50c6: 29 03       ).
    asl a                                                             ; 50c8: 0a          .
    asl a                                                             ; 50c9: 0a          .
    asl a                                                             ; 50ca: 0a          .
    asl a                                                             ; 50cb: 0a          .
    sta l0073                                                         ; 50cc: 85 73       .s
    asl a                                                             ; 50ce: 0a          .
    adc l0073                                                         ; 50cf: 65 73       es
    adc sprite_screen_and_data_addrs+sprite_addr_lo,x                 ; 50d1: 7d 03 56    }.V
    sta sprite_ptr2                                                   ; 50d4: 85 7e       .~
    lda sprite_screen_and_data_addrs+sprite_addr_hi,x                 ; 50d6: bd 02 56    ..V
    adc #0                                                            ; 50d9: 69 00       i.
    sta sprite_ptr2+1                                                 ; 50db: 85 7f       ..
    clc                                                               ; 50dd: 18          .
    jmp sprite_core_moving                                            ; 50de: 4c 51 52    LQR

; &50e1 referenced 2 times by &50be, &50c2
.clc_jmp_sprite_core
    clc                                                               ; 50e1: 18          .
    jmp sprite_core                                                   ; 50e2: 4c ff 51    L.Q

; &50e5 referenced 1 time by &5030
.remove_sprite_from_screen
    asl a                                                             ; 50e5: 0a          .
    tay                                                               ; 50e6: a8          .
    asl a                                                             ; 50e7: 0a          .
    tax                                                               ; 50e8: aa          .
    lda sprite_screen_and_data_addrs+screen_addr_lo,x                 ; 50e9: bd 00 56    ..V
    sta screen_ptr                                                    ; 50ec: 85 7a       .z
    lda sprite_screen_and_data_addrs+screen_addr_hi,x                 ; 50ee: bd 01 56    ..V
    beq s_subroutine_rts2                                             ; 50f1: f0 28       .(
    sta screen_ptr+1                                                  ; 50f3: 85 7b       .{
    lda sprite_pixel_coord_table_xy,y                                 ; 50f5: b9 60 57    .`W
    and #3                                                            ; 50f8: 29 03       ).
    asl a                                                             ; 50fa: 0a          .
    asl a                                                             ; 50fb: 0a          .
    asl a                                                             ; 50fc: 0a          .
    asl a                                                             ; 50fd: 0a          .
    sta l0073                                                         ; 50fe: 85 73       .s
    asl a                                                             ; 5100: 0a          .
    adc l0073                                                         ; 5101: 65 73       es
    adc sprite_screen_and_data_addrs+sprite_addr_lo,x                 ; 5103: 7d 03 56    }.V
    sta l0070                                                         ; 5106: 85 70       .p
    lda sprite_screen_and_data_addrs+sprite_addr_hi,x                 ; 5108: bd 02 56    ..V
    adc #0                                                            ; 510b: 69 00       i.
    sta l0071                                                         ; 510d: 85 71       .q
    lda #0                                                            ; 510f: a9 00       ..
    sta sprite_screen_and_data_addrs+screen_addr_lo,x                 ; 5111: 9d 00 56    ..V
    sta sprite_screen_and_data_addrs+screen_addr_hi,x                 ; 5114: 9d 01 56    ..V
    clc                                                               ; 5117: 18          .
    jmp sprite_core                                                   ; 5118: 4c ff 51    L.Q

; &511b referenced 1 time by &50f1
.s_subroutine_rts2
    rts                                                               ; 511b: 60          `

; Entered with A=W%-1; 0<=A<=&2F
; TODO: After the initial shifts, we have set Y=A*8 and then anded it
; with &38=%00111000. We then use Y as an offset from ri_a, so we are
; effectively addressing A% (A=0/Y=0), C% (A=1/Y=8), E% (A=2/Y=16),
; ... here. Similarly, the offset from ri_b will address the next
; resident integer variable, i.e. B% if A=0/Y=0, D% if A=1/Y=8, etc.
;     W%=&01 => A=&00 => Y=&00 => A%
;     W%=&02 => A=&01 => Y=&08 => C%
;     W%=&03 => A=&02 => Y=&10 => E%
;     W%=&04 => A=&03 => Y=&18 => G%
;     W%=&05 => A=&04 => Y=&20 => I%
;     W%=&06 => A=&05 => Y=&28 => K%
;     W%=&07 => A=&06 => Y=&30 => M%
;     W%=&08 => A=&07 => Y=&38 => O%
;     W%=&09 => A=&08 => Y=&00 => A%
;     W%=&0A => A=&09 => Y=&08 => C%
;     W%=&0B => A=&0A => Y=&10 => E%
;     W%=&0C => A=&0B => Y=&18 => G%
;     W%=&0D => A=&0C => Y=&20 => I%
;     W%=&0E => A=&0D => Y=&28 => K%
;     W%=&0F => A=&0E => Y=&30 => M%
;     W%=&10 => A=&0F => Y=&38 => O%
;     W%=&11 => A=&10 => Y=&00 => A%
;     W%=&12 => A=&11 => Y=&08 => C%
;     W%=&13 => A=&12 => Y=&10 => E%
;     W%=&14 => A=&13 => Y=&18 => G%
;     W%=&15 => A=&14 => Y=&20 => I%
;     W%=&16 => A=&15 => Y=&28 => K%
;     W%=&17 => A=&16 => Y=&30 => M%
;     W%=&18 => A=&17 => Y=&38 => O%
;     W%=&19 => A=&18 => Y=&00 => A%
;     W%=&1A => A=&19 => Y=&08 => C%
;     W%=&1B => A=&1A => Y=&10 => E%
;     W%=&1C => A=&1B => Y=&18 => G%
;     W%=&1D => A=&1C => Y=&20 => I%
;     W%=&1E => A=&1D => Y=&28 => K%
;     W%=&1F => A=&1E => Y=&30 => M%
;     W%=&20 => A=&1F => Y=&38 => O%
;     W%=&21 => A=&20 => Y=&00 => A%
;     W%=&22 => A=&21 => Y=&08 => C%
;     W%=&23 => A=&22 => Y=&10 => E%
;     W%=&24 => A=&23 => Y=&18 => G%
;     W%=&25 => A=&24 => Y=&20 => I%
;     W%=&26 => A=&25 => Y=&28 => K%
;     W%=&27 => A=&26 => Y=&30 => M%
;     W%=&28 => A=&27 => Y=&38 => O%
;     W%=&29 => A=&28 => Y=&00 => A%
;     W%=&2A => A=&29 => Y=&08 => C%
;     W%=&2B => A=&2A => Y=&10 => E%
;     W%=&2C => A=&2B => Y=&18 => G%
;     W%=&2D => A=&2C => Y=&20 => I%
;     W%=&2E => A=&2D => Y=&28 => K%
;     W%=&2F => A=&2E => Y=&30 => M%
;     W%=&30 => A=&2F => Y=&38 => O%
; &511c referenced 1 time by &5046
.get_sprite_details
    sta get_sprite_details_sprite_index                               ; 511c: 85 7c       .|
    asl a                                                             ; 511e: 0a          .
    tax                                                               ; 511f: aa          .
; TODO: Is the value written to &7D ever used?
    sta l007d                                                         ; 5120: 85 7d       .}
    asl a                                                             ; 5122: 0a          .
    sta l0074                                                         ; 5123: 85 74       .t
    asl a                                                             ; 5125: 0a          .
    and #&38 ; '8'                                                    ; 5126: 29 38       )8
    tay                                                               ; 5128: a8          .
; TODO: I don't think the value written to l0075 here is ever used?
    sty l0075                                                         ; 5129: 84 75       .u
; Set l0076 (low) and l0078 (high) to the first resident integer
; variable for this sprite divided by 8, which converts from OS
; coordinates (0-1279) to pixel coordinates (0-159). Similarly, divide
; the second resident integer variable by 4 to get Y pixel coordinates
; (0-255) at l0077 (low) and l0079 (high).
    lda ri_a+1,y                                                      ; 512b: b9 05 04    ...
    sta sprite_pixel_x_hi                                             ; 512e: 85 78       .x
    lda ri_a,y                                                        ; 5130: b9 04 04    ...
    lsr sprite_pixel_x_hi                                             ; 5133: 46 78       Fx
    ror a                                                             ; 5135: 6a          j
    lsr sprite_pixel_x_hi                                             ; 5136: 46 78       Fx
    ror a                                                             ; 5138: 6a          j
    lsr sprite_pixel_x_hi                                             ; 5139: 46 78       Fx
    ror a                                                             ; 513b: 6a          j
    sta sprite_pixel_x_lo                                             ; 513c: 85 76       .v
    lda ri_b+1,y                                                      ; 513e: b9 09 04    ...
    sta sprite_pixel_y_hi                                             ; 5141: 85 79       .y
    lda ri_b,y                                                        ; 5143: b9 08 04    ...
    lsr sprite_pixel_y_hi                                             ; 5146: 46 79       Fy
    ror a                                                             ; 5148: 6a          j
    lsr sprite_pixel_y_hi                                             ; 5149: 46 79       Fy
    ror a                                                             ; 514b: 6a          j
    sta sprite_pixel_y_lo                                             ; 514c: 85 77       .w
    ldy get_sprite_details_sprite_index                               ; 514e: a4 7c       .|
    lda sprite_pixel_coord_table_xy,x                                 ; 5150: bd 60 57    .`W
    sta sprite_pixel_current_x                                        ; 5153: 85 72       .r
    lda sprite_pixel_coord_table_xy+1,x                               ; 5155: bd 61 57    .aW
    sta sprite_pixel_current_y                                        ; 5158: 85 73       .s
; TODO: Won't sprite_pixel_x_hi always be 0, since if it's on-screen
; it will have been reduced to the range 0-159 after dividing by 8?
    lda sprite_pixel_x_hi                                             ; 515a: a5 78       .x
    beq sprite_pixel_x_hi_zero                                        ; 515c: f0 10       ..
    cmp #&80                                                          ; 515e: c9 80       ..
    bcc sprite_x_position_too_far_right                               ; 5160: 90 20       .
    bcs sprite_x_position_too_far_left                                ; 5162: b0 39       .9
; &5164 referenced 5 times by &5180, &5190, &519b, &51ab, &51b6
.sprite_check_y_position
    lda sprite_pixel_y_hi                                             ; 5164: a5 79       .y
    beq sprite_pixel_y_hi_zero                                        ; 5166: f0 50       .P
; TODO: cmp #&80 redundant? we just did LDA which will have set N so
; we can use beq/bne instead
    cmp #&80                                                          ; 5168: c9 80       ..
    bcc sprite_y_position_too_far_up                                  ; 516a: 90 5f       ._
    bcs sprite_y_position_too_far_down                                ; 516c: b0 77       .w
; &516e referenced 1 time by &515c
.sprite_pixel_x_hi_zero
    lda sprite_pixel_x_lo                                             ; 516e: a5 76       .v
    cmp constant_2                                                    ; 5170: cd f8 55    ..U
    bcc sprite_x_position_too_far_left                                ; 5173: 90 28       .(
    cmp constant_96                                                   ; 5175: cd f9 55    ..U
    beq sprite_x_position_ok                                          ; 5178: f0 02       ..
    bcs sprite_x_position_too_far_right                               ; 517a: b0 06       ..
; &517c referenced 1 time by &5178
.sprite_x_position_ok
    sta sprite_pixel_coord_table_xy,x                                 ; 517c: 9d 60 57    .`W
    clc                                                               ; 517f: 18          .
    bcc sprite_check_y_position                                       ; 5180: 90 e2       ..             ; always branch
; &5182 referenced 2 times by &5160, &517a
.sprite_x_position_too_far_right
    lda constant_1_per_sprite_table,y                                 ; 5182: b9 c0 57    ..W
    beq force_sprite_x_position_to_rhs                                ; 5185: f0 0b       ..
    cmp #1                                                            ; 5187: c9 01       ..
    beq force_sprite_x_position_to_lhs                                ; 5189: f0 22       ."
    lda #&ff                                                          ; 518b: a9 ff       ..
    sta sprite_pixel_coord_table_xy,x                                 ; 518d: 9d 60 57    .`W
    bne sprite_check_y_position                                       ; 5190: d0 d2       ..             ; always branch
; &5192 referenced 2 times by &5185, &51a4
.force_sprite_x_position_to_rhs
    lda constant_96                                                   ; 5192: ad f9 55    ..U
    sta sprite_pixel_coord_table_xy,x                                 ; 5195: 9d 60 57    .`W
    sta sprite_pixel_x_lo                                             ; 5198: 85 76       .v
; TODO: I believe this is effectively a jmp and nothing cares about
; the fact we've cleared carry.
    clc                                                               ; 519a: 18          .
    bcc sprite_check_y_position                                       ; 519b: 90 c7       ..
; &519d referenced 2 times by &5162, &5173
.sprite_x_position_too_far_left
    lda constant_1_per_sprite_table,y                                 ; 519d: b9 c0 57    ..W            ; always branch
    beq force_sprite_x_position_to_lhs                                ; 51a0: f0 0b       ..
    cmp #1                                                            ; 51a2: c9 01       ..
    beq force_sprite_x_position_to_rhs                                ; 51a4: f0 ec       ..
    lda #&fe                                                          ; 51a6: a9 fe       ..
    sta sprite_pixel_coord_table_xy,x                                 ; 51a8: 9d 60 57    .`W
    bne sprite_check_y_position                                       ; 51ab: d0 b7       ..             ; always branch
; &51ad referenced 2 times by &5189, &51a0
.force_sprite_x_position_to_lhs
    lda constant_2                                                    ; 51ad: ad f8 55    ..U
    sta sprite_pixel_coord_table_xy,x                                 ; 51b0: 9d 60 57    .`W
    sta sprite_pixel_x_lo                                             ; 51b3: 85 76       .v
    clc                                                               ; 51b5: 18          .
    bcc sprite_check_y_position                                       ; 51b6: 90 ac       ..
; &51b8 referenced 1 time by &5166
.sprite_pixel_y_hi_zero
    lda sprite_pixel_y_lo                                             ; 51b8: a5 77       .w
    cmp sprite_y_min                                                  ; 51ba: cd fa 55    ..U
    bcc sprite_y_position_too_far_down                                ; 51bd: 90 26       .&
    cmp sprite_y_max                                                  ; 51bf: cd fb 55    ..U
    beq sprite_y_position_adjusted                                    ; 51c2: f0 02       ..
    bcs sprite_y_position_too_far_up                                  ; 51c4: b0 05       ..
; &51c6 referenced 1 time by &51c2
.sprite_y_position_adjusted
    sta sprite_pixel_coord_table_xy+1,x                               ; 51c6: 9d 61 57    .aW
    clc                                                               ; 51c9: 18          .
    rts                                                               ; 51ca: 60          `

; &51cb referenced 2 times by &516a, &51c4
.sprite_y_position_too_far_up
    lda constant_1_per_sprite_table,y                                 ; 51cb: b9 c0 57    ..W
    beq force_sprite_y_position_to_constant_fe                        ; 51ce: f0 0b       ..
    cmp #1                                                            ; 51d0: c9 01       ..
    beq force_sprite_y_position_to_constant_10                        ; 51d2: f0 21       .!
    lda #0                                                            ; 51d4: a9 00       ..
    sta sprite_pixel_coord_table_xy+1,x                               ; 51d6: 9d 61 57    .aW
    clc                                                               ; 51d9: 18          .
    rts                                                               ; 51da: 60          `

; &51db referenced 2 times by &51ce, &51ec
.force_sprite_y_position_to_constant_fe
    lda sprite_y_max                                                  ; 51db: ad fb 55    ..U
    sta sprite_pixel_coord_table_xy+1,x                               ; 51de: 9d 61 57    .aW
    sta sprite_pixel_y_lo                                             ; 51e1: 85 77       .w
    clc                                                               ; 51e3: 18          .
    rts                                                               ; 51e4: 60          `

; &51e5 referenced 2 times by &516c, &51bd
.sprite_y_position_too_far_down
    lda constant_1_per_sprite_table,y                                 ; 51e5: b9 c0 57    ..W
    beq force_sprite_y_position_to_constant_10                        ; 51e8: f0 0b       ..
    cmp #1                                                            ; 51ea: c9 01       ..
    beq force_sprite_y_position_to_constant_fe                        ; 51ec: f0 ed       ..
    lda #1                                                            ; 51ee: a9 01       ..
    sta sprite_pixel_coord_table_xy+1,x                               ; 51f0: 9d 61 57    .aW
    clc                                                               ; 51f3: 18          .
    rts                                                               ; 51f4: 60          `

; &51f5 referenced 2 times by &51d2, &51e8
.force_sprite_y_position_to_constant_10
    lda sprite_y_min                                                  ; 51f5: ad fa 55    ..U
    sta sprite_pixel_coord_table_xy+1,x                               ; 51f8: 9d 61 57    .aW
    sta sprite_pixel_y_lo                                             ; 51fb: 85 77       .w
    clc                                                               ; 51fd: 18          .
    rts                                                               ; 51fe: 60          `

; Sprite plot routine. EORs a 3-byte (12 pixel) wide sprite onto the
; screen, writing data starting at the address pointed to by
; screen_ptr and taking sprite data from the address pointed to by
; sprite_ptr. There's provision for wrapping around onto next screen
; character row as required and I think in principle sprites can be
; arbitrarily many screen character rows tall; it looks as though
; l0075 is used to control this, although in practice it is probably
; always 1 as I can't see any entry point which would change this.
; (The caller will have adjusted the start screen address to allow for
; arbitrary Y pixel positioning; the sprite data itself is not
; adjusted - I think this is obvious really but it confused me for a
; while.)
; 
; There seems to be a slightly odd desire to keep carry clear all the
; time instead of just clearing it before we need it to be clear, but
; I may be missing something.
; &51ff referenced 2 times by &50e2, &5118
.sprite_core
    lda #1                                                            ; 51ff: a9 01       ..
    sta l0075                                                         ; 5201: 85 75       .u
; &5203 referenced 1 time by &523b
.sprite_core_outer_loop
    ldx #8                                                            ; 5203: a2 08       ..
; &5205 referenced 1 time by &522c
.sprite_core_inner_loop
    ldy #0                                                            ; 5205: a0 00       ..
    lda (screen_ptr),y                                                ; 5207: b1 7a       .z
    eor (sprite_ptr),y                                                ; 5209: 51 70       Qp
    sta (screen_ptr),y                                                ; 520b: 91 7a       .z
    ldy #8                                                            ; 520d: a0 08       ..
    lda (screen_ptr),y                                                ; 520f: b1 7a       .z
    eor (sprite_ptr),y                                                ; 5211: 51 70       Qp
    sta (screen_ptr),y                                                ; 5213: 91 7a       .z
    ldy #&10                                                          ; 5215: a0 10       ..
    lda (screen_ptr),y                                                ; 5217: b1 7a       .z
    eor (sprite_ptr),y                                                ; 5219: 51 70       Qp
    sta (screen_ptr),y                                                ; 521b: 91 7a       .z
    lda screen_ptr                                                    ; 521d: a5 7a       .z
    and #7                                                            ; 521f: 29 07       ).
    eor #7                                                            ; 5221: 49 07       I.
    beq sprite_core_next_row                                          ; 5223: f0 19       ..
    inc screen_ptr                                                    ; 5225: e6 7a       .z
; &5227 referenced 1 time by &524a
.sprite_core_screen_ptr_updated
    inc sprite_ptr                                                    ; 5227: e6 70       .p
    beq sprite_core_low_byte_wrapped                                  ; 5229: f0 21       .!
; &522b referenced 1 time by &524f
.sprite_core_low_byte_wrap_handled
    dex                                                               ; 522b: ca          .
    bne sprite_core_inner_loop                                        ; 522c: d0 d7       ..
    lda sprite_ptr                                                    ; 522e: a5 70       .p
    adc #&10                                                          ; 5230: 69 10       i.
    sta sprite_ptr                                                    ; 5232: 85 70       .p
    bcc sprite_core_no_carry                                          ; 5234: 90 03       ..
    inc sprite_ptr+1                                                  ; 5236: e6 71       .q
    clc                                                               ; 5238: 18          .
; &5239 referenced 1 time by &5234
.sprite_core_no_carry
    dec l0075                                                         ; 5239: c6 75       .u
    beq sprite_core_outer_loop                                        ; 523b: f0 c6       ..
    rts                                                               ; 523d: 60          `

; &523e referenced 1 time by &5223
.sprite_core_next_row
    lda screen_ptr                                                    ; 523e: a5 7a       .z
    adc #<(bytes_per_screen_line-7)                                   ; 5240: 69 39       i9
    sta screen_ptr                                                    ; 5242: 85 7a       .z
    lda screen_ptr+1                                                  ; 5244: a5 7b       .{
    adc #1                                                            ; 5246: 69 01       i.
    sta screen_ptr+1                                                  ; 5248: 85 7b       .{
    bne sprite_core_screen_ptr_updated                                ; 524a: d0 db       ..             ; always branch
; &524c referenced 1 time by &5229
.sprite_core_low_byte_wrapped
    inc sprite_ptr+1                                                  ; 524c: e6 71       .q
    clc                                                               ; 524e: 18          .
    bne sprite_core_low_byte_wrap_handled                             ; 524f: d0 da       ..             ; always branch

; TODO: This looks like an 'alternate version' of sprite_core? I
; haven't been over the code properly yet, but I suspect it is a
; 'erase at old location, replot immediately at new location' variant,
; to handle moving sprites more efficiently.
; &5251 referenced 2 times by &50de, &545c
.sprite_core_moving
    lda #1                                                            ; 5251: a9 01       ..
    sta l0075                                                         ; 5253: 85 75       .u
    sei                                                               ; 5255: 78          x
; &5256 referenced 1 time by &52b9
.sprite_core_moving_outer_loop
    ldx #8                                                            ; 5256: a2 08       ..
; &5258 referenced 1 time by &529f
.sprite_core_moving_inner_loop
    ldy #0                                                            ; 5258: a0 00       ..
    lda (screen_ptr2),y                                               ; 525a: b1 7c       .|
    eor (sprite_ptr2),y                                               ; 525c: 51 7e       Q~
    sta (screen_ptr2),y                                               ; 525e: 91 7c       .|
    lda (screen_ptr),y                                                ; 5260: b1 7a       .z
    eor (sprite_ptr),y                                                ; 5262: 51 70       Qp
    sta (screen_ptr),y                                                ; 5264: 91 7a       .z
    ldy #8                                                            ; 5266: a0 08       ..
    lda (screen_ptr2),y                                               ; 5268: b1 7c       .|
    eor (sprite_ptr2),y                                               ; 526a: 51 7e       Q~
    sta (screen_ptr2),y                                               ; 526c: 91 7c       .|
    lda (screen_ptr),y                                                ; 526e: b1 7a       .z
    eor (sprite_ptr),y                                                ; 5270: 51 70       Qp
    sta (screen_ptr),y                                                ; 5272: 91 7a       .z
    ldy #&10                                                          ; 5274: a0 10       ..
    lda (screen_ptr2),y                                               ; 5276: b1 7c       .|
    eor (sprite_ptr2),y                                               ; 5278: 51 7e       Q~
    sta (screen_ptr2),y                                               ; 527a: 91 7c       .|
    lda (screen_ptr),y                                                ; 527c: b1 7a       .z
    eor (sprite_ptr),y                                                ; 527e: 51 70       Qp
    sta (screen_ptr),y                                                ; 5280: 91 7a       .z
    lda screen_ptr                                                    ; 5282: a5 7a       .z
    and #7                                                            ; 5284: 29 07       ).
    eor #7                                                            ; 5286: 49 07       I.
    beq sprite_core_moving_next_row                                   ; 5288: f0 33       .3
    inc screen_ptr                                                    ; 528a: e6 7a       .z
; &528c referenced 1 time by &52c9
.sprite_core_moving_screen_ptr_updated
    lda screen_ptr2                                                   ; 528c: a5 7c       .|
    and #7                                                            ; 528e: 29 07       ).
    eor #7                                                            ; 5290: 49 07       I.
    beq sprite_core_moving_next_row2                                  ; 5292: f0 37       .7
    inc screen_ptr2                                                   ; 5294: e6 7c       .|
; &5296 referenced 1 time by &52d7
.sprite_core_moving_screen_ptr2_updated
    inc sprite_ptr                                                    ; 5296: e6 70       .p
    beq sprite_core_moving_low_byte_wrapped                           ; 5298: f0 3f       .?
; &529a referenced 1 time by &52dc
.sprite_core_moving_low_byte_wrap_handled
    inc sprite_ptr2                                                   ; 529a: e6 7e       .~
    beq sprite_core_moving_low_byte_wrapped2                          ; 529c: f0 40       .@
; &529e referenced 1 time by &52e1
.sprite_core_moving_low_byte_wrap2_handled
    dex                                                               ; 529e: ca          .
    bne sprite_core_moving_inner_loop                                 ; 529f: d0 b7       ..
    lda sprite_ptr                                                    ; 52a1: a5 70       .p
    adc #&10                                                          ; 52a3: 69 10       i.
    sta sprite_ptr                                                    ; 52a5: 85 70       .p
    bcc sprite_core_moving_no_carry                                   ; 52a7: 90 03       ..
    inc sprite_ptr+1                                                  ; 52a9: e6 71       .q
    clc                                                               ; 52ab: 18          .
; &52ac referenced 1 time by &52a7
.sprite_core_moving_no_carry
    lda sprite_ptr2                                                   ; 52ac: a5 7e       .~
    adc #&10                                                          ; 52ae: 69 10       i.
    sta sprite_ptr2                                                   ; 52b0: 85 7e       .~
    bcc sprite_core_moving_no_carry2                                  ; 52b2: 90 03       ..
    inc sprite_ptr2+1                                                 ; 52b4: e6 7f       ..
    clc                                                               ; 52b6: 18          .
; &52b7 referenced 1 time by &52b2
.sprite_core_moving_no_carry2
    dec l0075                                                         ; 52b7: c6 75       .u
    beq sprite_core_moving_outer_loop                                 ; 52b9: f0 9b       ..
; &52bb referenced 7 times by &52e6, &52ea, &52f3, &52f7, &52fb, &52ff, &532c
.cli_rts
    cli                                                               ; 52bb: 58          X
    rts                                                               ; 52bc: 60          `

; &52bd referenced 1 time by &5288
.sprite_core_moving_next_row
    lda screen_ptr                                                    ; 52bd: a5 7a       .z
    adc #<(bytes_per_screen_line-7)                                   ; 52bf: 69 39       i9
    sta screen_ptr                                                    ; 52c1: 85 7a       .z
    lda screen_ptr+1                                                  ; 52c3: a5 7b       .{
    adc #>(bytes_per_screen_line-7)                                   ; 52c5: 69 01       i.
    sta screen_ptr+1                                                  ; 52c7: 85 7b       .{
    bne sprite_core_moving_screen_ptr_updated                         ; 52c9: d0 c1       ..
; &52cb referenced 1 time by &5292
.sprite_core_moving_next_row2
    lda screen_ptr2                                                   ; 52cb: a5 7c       .|
    adc #<(bytes_per_screen_line-7)                                   ; 52cd: 69 39       i9
    sta screen_ptr2                                                   ; 52cf: 85 7c       .|
    lda screen_ptr2+1                                                 ; 52d1: a5 7d       .}
    adc #>(bytes_per_screen_line-7)                                   ; 52d3: 69 01       i.
    sta screen_ptr2+1                                                 ; 52d5: 85 7d       .}
    bne sprite_core_moving_screen_ptr2_updated                        ; 52d7: d0 bd       ..
; &52d9 referenced 1 time by &5298
.sprite_core_moving_low_byte_wrapped
    inc sprite_ptr+1                                                  ; 52d9: e6 71       .q
    clc                                                               ; 52db: 18          .
    bne sprite_core_moving_low_byte_wrap_handled                      ; 52dc: d0 bc       ..
; &52de referenced 1 time by &529c
.sprite_core_moving_low_byte_wrapped2
    inc sprite_ptr2+1                                                 ; 52de: e6 7f       ..
    clc                                                               ; 52e0: 18          .
    bne sprite_core_moving_low_byte_wrap2_handled                     ; 52e1: d0 bb       ..
; Takes sprite slot in W%. No-op if Z% is 5, &A or &14. Otherwise
; appears to be responsible for moving the selected sprite according
; to some internal rules. Set Y%=0 (move) and calls s_subroutine after
; moving.
; TODO: I think there's no need for the branches to cli_rts here, we
; could just branch to the rts.
.t_subroutine
    lda ri_w                                                          ; 52e3: ad 5c 04    .\.
    beq cli_rts                                                       ; 52e6: f0 d3       ..
    cmp #max_sprite_num+1                                             ; 52e8: c9 31       .1
    bcs cli_rts                                                       ; 52ea: b0 cf       ..
    sec                                                               ; 52ec: 38          8
    sbc #1                                                            ; 52ed: e9 01       ..
    tay                                                               ; 52ef: a8          .
    lda ri_z                                                          ; 52f0: ad 68 04    .h.
    beq cli_rts                                                       ; 52f3: f0 c6       ..
    cmp #&0a                                                          ; 52f5: c9 0a       ..
    beq cli_rts                                                       ; 52f7: f0 c2       ..
    cmp #5                                                            ; 52f9: c9 05       ..
    beq cli_rts                                                       ; 52fb: f0 be       ..
    cmp #&14                                                          ; 52fd: c9 14       ..
    bcs cli_rts                                                       ; 52ff: b0 ba       ..
    sec                                                               ; 5301: 38          8
    sbc #1                                                            ; 5302: e9 01       ..
    asl a                                                             ; 5304: 0a          .
    tax                                                               ; 5305: aa          .
; TODO: So for the first part at least, X=Z%*2, and we use it to
; access the sprite_something_table_two_bytes_per_sprite table, so Z%
; is presumably a sprite slot.
    lda #0                                                            ; 5306: a9 00       ..
    sta ri_y                                                          ; 5308: 8d 64 04    .d.
    sta t_subroutine_os_x_hi                                          ; 530b: 85 70       .p
    sta t_subroutine_os_y_hi                                          ; 530d: 85 72       .r
    lda #1                                                            ; 530f: a9 01       ..
    sta t_subroutine_constant_1                                       ; 5311: 85 73       .s
    tya                                                               ; 5313: 98          .
    asl a                                                             ; 5314: 0a          .
    sta t_subroutine_w_minus_1_times_2                                ; 5315: 85 7f       ..
    tay                                                               ; 5317: a8          .
    asl a                                                             ; 5318: 0a          .
    sta t_subroutine_w_minus_1_times_4                                ; 5319: 85 7e       .~
    and #&3f ; '?'                                                    ; 531b: 29 3f       )?
    asl a                                                             ; 531d: 0a          .
    sta t_subroutine_w_minus_1_times_8                                ; 531e: 85 76       .v
    lda sprite_pixel_coord_table_xy,y                                 ; 5320: b9 60 57    .`W
    cmp #&fe                                                          ; 5323: c9 fe       ..
    bcs t_subroutine_invalid_sprite_pixel_coord                       ; 5325: b0 57       .W
    ldy t_subroutine_w_minus_1_times_4                                ; 5327: a4 7e       .~
    lda sprite_screen_and_data_addrs+screen_addr_hi,y                 ; 5329: b9 01 56    ..V
    beq cli_rts                                                       ; 532c: f0 8d       ..
    ldy t_subroutine_w_minus_1_times_2                                ; 532e: a4 7f       ..
    lda sprite_something_table_two_bytes_per_sprite,x                 ; 5330: bd c0 55    ..U
    bmi add_negative_x_offset                                         ; 5333: 30 77       0w
    clc                                                               ; 5335: 18          .
    adc sprite_pixel_coord_table_xy,y                                 ; 5336: 79 60 57    y`W
    bcs c53a8                                                         ; 5339: b0 6d       .m
; &533b referenced 3 times by &537c, &53aa, &53b2
.x_pixel_coord_in_a
    asl a                                                             ; 533b: 0a          .
    rol t_subroutine_os_x_hi                                          ; 533c: 26 70       &p
    asl a                                                             ; 533e: 0a          .
    rol t_subroutine_os_x_hi                                          ; 533f: 26 70       &p
    asl a                                                             ; 5341: 0a          .
    rol t_subroutine_os_x_hi                                          ; 5342: 26 70       &p
    sta t_subroutine_os_x_lo                                          ; 5344: 85 71       .q
; &5346 referenced 2 times by &539a, &53b8
.c5346
    lda sprite_pixel_coord_table_xy+1,y                               ; 5346: b9 61 57    .aW
    cmp #2                                                            ; 5349: c9 02       ..
    bcc c53ca_indirect                                                ; 534b: 90 2b       .+
    lda sprite_something_table_two_bytes_per_sprite+1,x               ; 534d: bd c1 55    ..U
    bmi add_negative_y_offset                                         ; 5350: 30 6c       0l
    clc                                                               ; 5352: 18          .
    adc sprite_pixel_coord_table_xy+1,y                               ; 5353: 79 61 57    yaW
    bcs new_y_pixel_coord_gt_255                                      ; 5356: b0 62       .b
; &5358 referenced 3 times by &53bc, &53c4, &53c8
.y_pixel_coord_in_a
    asl a                                                             ; 5358: 0a          .
    rol t_subroutine_os_y_hi                                          ; 5359: 26 72       &r
    asl a                                                             ; 535b: 0a          .
    rol t_subroutine_os_y_hi                                          ; 535c: 26 72       &r
    tax                                                               ; 535e: aa          .
; &535f referenced 1 time by &53f8
.set_ri_os_coords_y_lo_in_x_and_jmp_s_subroutine
    ldy t_subroutine_w_minus_1_times_8                                ; 535f: a4 76       .v
    lda t_subroutine_os_x_lo                                          ; 5361: a5 71       .q
    sta ri_a,y                                                        ; 5363: 99 04 04    ...
    lda t_subroutine_os_x_hi                                          ; 5366: a5 70       .p
    sta ri_a+1,y                                                      ; 5368: 99 05 04    ...
    lda t_subroutine_os_y_hi                                          ; 536b: a5 72       .r
    sta ri_b+1,y                                                      ; 536d: 99 09 04    ...
    txa                                                               ; 5370: 8a          .
    sta ri_b,y                                                        ; 5371: 99 08 04    ...
    jmp s_subroutine                                                  ; 5374: 4c 33 50    L3P

    equb &60                                                          ; 5377: 60          `
; TODO: This is called once, via a bcc.
; &5378 referenced 1 time by &534b
.c53ca_indirect
    bcc c53ca                                                         ; 5378: 90 50       .P             ; always branch
; TODO: This is called once, via a bcc.
; &537a referenced 1 time by &53b0
.new_x_pixel_coord_lt_0
    dec t_subroutine_os_x_hi                                          ; 537a: c6 70       .p
    bcc x_pixel_coord_in_a                                            ; 537c: 90 bd       ..             ; always branch
; &537e referenced 1 time by &5325
.t_subroutine_invalid_sprite_pixel_coord
    beq c539c                                                         ; 537e: f0 1c       ..
    lda sprite_something_table_two_bytes_per_sprite,x                 ; 5380: bd c0 55    ..U
    beq c53b4                                                         ; 5383: f0 2f       ./
    cmp #&80                                                          ; 5385: c9 80       ..
    bcs c53b4                                                         ; 5387: b0 2b       .+
    lda constant_2                                                    ; 5389: ad f8 55    ..U
; &538c referenced 1 time by &53a6
.loop_c538c
    sta sprite_pixel_coord_table_xy,y                                 ; 538c: 99 60 57    .`W
    asl a                                                             ; 538f: 0a          .
    rol t_subroutine_os_x_hi                                          ; 5390: 26 70       &p
    asl a                                                             ; 5392: 0a          .
    rol t_subroutine_os_x_hi                                          ; 5393: 26 70       &p
    asl a                                                             ; 5395: 0a          .
    rol t_subroutine_os_x_hi                                          ; 5396: 26 70       &p
    sta t_subroutine_os_x_lo                                          ; 5398: 85 71       .q
    bne c5346                                                         ; 539a: d0 aa       ..
; &539c referenced 1 time by &537e
.c539c
    lda sprite_something_table_two_bytes_per_sprite,x                 ; 539c: bd c0 55    ..U
    cmp #&80                                                          ; 539f: c9 80       ..
    bcc c53b4                                                         ; 53a1: 90 11       ..
    lda constant_96                                                   ; 53a3: ad f9 55    ..U
    bne loop_c538c                                                    ; 53a6: d0 e4       ..
; &53a8 referenced 1 time by &5339
.c53a8
    inc t_subroutine_os_x_hi                                          ; 53a8: e6 70       .p
    bne x_pixel_coord_in_a                                            ; 53aa: d0 8f       ..
; &53ac referenced 1 time by &5333
.add_negative_x_offset
    clc                                                               ; 53ac: 18          .
    adc sprite_pixel_coord_table_xy,y                                 ; 53ad: 79 60 57    y`W
    bcc new_x_pixel_coord_lt_0                                        ; 53b0: 90 c8       ..
    bcs x_pixel_coord_in_a                                            ; 53b2: b0 87       ..
; &53b4 referenced 3 times by &5383, &5387, &53a1
.c53b4
    lda #1                                                            ; 53b4: a9 01       ..
    sta t_subroutine_constant_1                                       ; 53b6: 85 73       .s
    bne c5346                                                         ; 53b8: d0 8c       ..
; &53ba referenced 1 time by &5356
.new_y_pixel_coord_gt_255
    inc t_subroutine_os_y_hi                                          ; 53ba: e6 72       .r
    bne y_pixel_coord_in_a                                            ; 53bc: d0 9a       ..             ; always branch
; &53be referenced 1 time by &5350
.add_negative_y_offset
    clc                                                               ; 53be: 18          .
    adc sprite_pixel_coord_table_xy+1,y                               ; 53bf: 79 61 57    yaW
    bcc new_y_pixel_coord_lt_0                                        ; 53c2: 90 02       ..
    bcs y_pixel_coord_in_a                                            ; 53c4: b0 92       ..
; &53c6 referenced 1 time by &53c2
.new_y_pixel_coord_lt_0
    dec t_subroutine_os_y_hi                                          ; 53c6: c6 72       .r
    bcc y_pixel_coord_in_a                                            ; 53c8: 90 8e       ..
; &53ca referenced 1 time by &5378
.c53ca
    cmp #1                                                            ; 53ca: c9 01       ..
    beq c53ec                                                         ; 53cc: f0 1e       ..
    lda sprite_something_table_two_bytes_per_sprite+1,x               ; 53ce: bd c1 55    ..U
    beq u_subroutine_rts                                              ; 53d1: f0 18       ..
    cmp #&80                                                          ; 53d3: c9 80       ..
    bcs u_subroutine_rts                                              ; 53d5: b0 14       ..
    lda sprite_y_min                                                  ; 53d7: ad fa 55    ..U
; TODO: we are storing at sprite_pixel_coord_table_xy+1,y - the +1
; suggests y coord, but multiply by 8 suggests x
; &53da referenced 1 time by &53f6
.x_pixel_coord_in_a_2
    sta sprite_pixel_coord_table_xy+1,y                               ; 53da: 99 61 57    .aW
    asl a                                                             ; 53dd: 0a          .
    rol t_subroutine_os_y_hi                                          ; 53de: 26 72       &r
    asl a                                                             ; 53e0: 0a          .
    rol t_subroutine_os_y_hi                                          ; 53e1: 26 72       &r
    asl a                                                             ; 53e3: 0a          .
    rol t_subroutine_os_y_hi                                          ; 53e4: 26 72       &r
    tax                                                               ; 53e6: aa          .
    lda t_subroutine_constant_1                                       ; 53e7: a5 73       .s
    bne c53f8                                                         ; 53e9: d0 0d       ..             ; always branch?
; &53eb referenced 7 times by &53d1, &53d5, &53f1, &53fe, &5402, &540e, &541e
.u_subroutine_rts
    rts                                                               ; 53eb: 60          `

; &53ec referenced 1 time by &53cc
.c53ec
    lda sprite_something_table_two_bytes_per_sprite+1,x               ; 53ec: bd c1 55    ..U
    cmp #&80                                                          ; 53ef: c9 80       ..
    bcc u_subroutine_rts                                              ; 53f1: 90 f8       ..
    lda sprite_y_max                                                  ; 53f3: ad fb 55    ..U
    bne x_pixel_coord_in_a_2                                          ; 53f6: d0 e2       ..             ; always branch; always branch
; &53f8 referenced 1 time by &53e9
.c53f8
    jmp set_ri_os_coords_y_lo_in_x_and_jmp_s_subroutine               ; 53f8: 4c 5f 53    L_S

; If X%=0 on entry, update the resident integer variables for sprite
; slot W% with that sprite's current OS coordinates. Otherwise, remove
; the existing sprite in slot W% from the screen and replace it with
; sprite image X%, effectively changing its appearance in place. TODO:
; There are probably some subtleties here, but I think that's broadly
; right.
.u_subroutine
    lda ri_w                                                          ; 53fb: ad 5c 04    .\.
    beq u_subroutine_rts                                              ; 53fe: f0 eb       ..
    cmp #max_sprite_num+1                                             ; 5400: c9 31       .1
    bcs u_subroutine_rts                                              ; 5402: b0 e7       ..
    sec                                                               ; 5404: 38          8
    sbc #1                                                            ; 5405: e9 01       ..
    ldx ri_x                                                          ; 5407: ae 60 04    .`.
    beq u_subroutine_ri_x_0                                           ; 540a: f0 53       .S
    cpx #max_sprite_num+1                                             ; 540c: e0 31       .1
    bcs u_subroutine_rts                                              ; 540e: b0 db       ..
    asl a                                                             ; 5410: 0a          .
    tay                                                               ; 5411: a8          .
    asl a                                                             ; 5412: 0a          .
    tax                                                               ; 5413: aa          .
    lda sprite_screen_and_data_addrs+screen_addr_lo,x                 ; 5414: bd 00 56    ..V
    sta screen_ptr2                                                   ; 5417: 85 7c       .|
    sta screen_ptr                                                    ; 5419: 85 7a       .z
    lda sprite_screen_and_data_addrs+screen_addr_hi,x                 ; 541b: bd 01 56    ..V
    beq u_subroutine_rts                                              ; 541e: f0 cb       ..
    sta screen_ptr2+1                                                 ; 5420: 85 7d       .}
    sta screen_ptr+1                                                  ; 5422: 85 7b       .{
; Get the sprite's X pixel coordinate and use its low two bits to
; select one of the four pre-shifted variants, assuming it is a two
; character cell (8 pixel) wide sprite.
    lda sprite_pixel_coord_table_xy,y                                 ; 5424: b9 60 57    .`W
    and #3                                                            ; 5427: 29 03       ).
    asl a                                                             ; 5429: 0a          .
    asl a                                                             ; 542a: 0a          .
    asl a                                                             ; 542b: 0a          .
    asl a                                                             ; 542c: 0a          .
    sta l0073                                                         ; 542d: 85 73       .s
    asl a                                                             ; 542f: 0a          .
    adc l0073                                                         ; 5430: 65 73       es
    sta l0072                                                         ; 5432: 85 72       .r
    adc sprite_screen_and_data_addrs+sprite_addr_lo,x                 ; 5434: 7d 03 56    }.V
    sta sprite_ptr2                                                   ; 5437: 85 7e       .~
    lda sprite_screen_and_data_addrs+sprite_addr_hi,x                 ; 5439: bd 02 56    ..V
    adc #0                                                            ; 543c: 69 00       i.
    sta sprite_ptr2+1                                                 ; 543e: 85 7f       ..
    lda ri_x                                                          ; 5440: ad 60 04    .`.
    sec                                                               ; 5443: 38          8
    sbc #1                                                            ; 5444: e9 01       ..
    asl a                                                             ; 5446: 0a          .
    tay                                                               ; 5447: a8          .
    lda l0072                                                         ; 5448: a5 72       .r
    adc sprite_ref_addrs_be+1,y                                       ; 544a: 79 01 57    y.W
    sta sprite_screen_and_data_addrs+sprite_addr_lo,x                 ; 544d: 9d 03 56    ..V
    sta sprite_ptr                                                    ; 5450: 85 70       .p
    lda sprite_ref_addrs_be,y                                         ; 5452: b9 00 57    ..W
    adc #0                                                            ; 5455: 69 00       i.
    sta sprite_screen_and_data_addrs+sprite_addr_hi,x                 ; 5457: 9d 02 56    ..V
    sta sprite_ptr+1                                                  ; 545a: 85 71       .q
    jmp sprite_core_moving                                            ; 545c: 4c 51 52    LQR

; &545f referenced 1 time by &540a
.u_subroutine_ri_x_0
    asl a                                                             ; 545f: 0a          .
    tax                                                               ; 5460: aa          .
    asl a                                                             ; 5461: 0a          .
    tay                                                               ; 5462: a8          .
    lda sprite_screen_and_data_addrs+screen_addr_hi,y                 ; 5463: b9 01 56    ..V
    beq u_subroutine_rts2                                             ; 5466: f0 30       .0
    tya                                                               ; 5468: 98          .
    asl a                                                             ; 5469: 0a          .
    and #&3f ; '?'                                                    ; 546a: 29 3f       )?
    tay                                                               ; 546c: a8          .
    lda #0                                                            ; 546d: a9 00       ..
    sta l0070                                                         ; 546f: 85 70       .p
    sta l0071                                                         ; 5471: 85 71       .q
    lda sprite_pixel_coord_table_xy,x                                 ; 5473: bd 60 57    .`W
    asl a                                                             ; 5476: 0a          .
    rol l0070                                                         ; 5477: 26 70       &p
    asl a                                                             ; 5479: 0a          .
    rol l0070                                                         ; 547a: 26 70       &p
    asl a                                                             ; 547c: 0a          .
    rol l0070                                                         ; 547d: 26 70       &p
    sta ri_a,y                                                        ; 547f: 99 04 04    ...
    lda l0070                                                         ; 5482: a5 70       .p
    sta ri_a+1,y                                                      ; 5484: 99 05 04    ...
    lda sprite_pixel_coord_table_xy+1,x                               ; 5487: bd 61 57    .aW
    asl a                                                             ; 548a: 0a          .
    rol l0071                                                         ; 548b: 26 71       &q
    asl a                                                             ; 548d: 0a          .
    rol l0071                                                         ; 548e: 26 71       &q
    sta ri_b,y                                                        ; 5490: 99 08 04    ...
    lda l0071                                                         ; 5493: a5 71       .q
    sta ri_b+1,y                                                      ; 5495: 99 09 04    ...
; &5498 referenced 1 time by &5466
.u_subroutine_rts2
    rts                                                               ; 5498: 60          `

; Zero resident integer variables A%-Z%
; TODO: This code probably initialises some game state; if this is
; one-off initialisation I think it could just have been done at build
; time, but if it changes during gameplay it makes sense to have code
; to reset things when a new game starts.
.v_subroutine
    ldx #('Z'-'A'+1)*4                                                ; 5499: a2 68       .h
    lda #0                                                            ; 549b: a9 00       ..
; &549d referenced 1 time by &54a1
.zero_ri_loop
    sta ri_a-1,x                                                      ; 549d: 9d 03 04    ...
    dex                                                               ; 54a0: ca          .
    bne zero_ri_loop                                                  ; 54a1: d0 fa       ..
; Initialise resident integer variables Q%-V%
; TODO: S% at least is effectively a way for this machine code to
; communicate its internal addresses to the BASIC - quite a neat
; trick. Other variables here may well work the same way
    ldx #('V'-'Q'+1)*4                                                ; 54a3: a2 18       ..
; &54a5 referenced 1 time by &54ac
.init_qrstuv_loop
    lda initial_qrstuv_values-1,x                                     ; 54a5: bd db 54    ..T
    sta ri_q-1,x                                                      ; 54a8: 9d 43 04    .C.
    dex                                                               ; 54ab: ca          .
    bne init_qrstuv_loop                                              ; 54ac: d0 f7       ..
    ldx #0                                                            ; 54ae: a2 00       ..
    clc                                                               ; 54b0: 18          .
    ldy #max_sprite_num                                               ; 54b1: a0 30       .0
    sty l0070                                                         ; 54b3: 84 70       .p
    ldy #0                                                            ; 54b5: a0 00       ..
; &54b7 referenced 1 time by &54d9
.init_sprite_screen_and_data_addrs_loop
    lda sprite_ref_addrs_be+0,x                                       ; 54b7: bd 00 57    ..W
    sta sprite_screen_and_data_addrs+sprite_addr_hi,y                 ; 54ba: 99 02 56    ..V
    lda sprite_ref_addrs_be+1,x                                       ; 54bd: bd 01 57    ..W
    sta sprite_screen_and_data_addrs+sprite_addr_lo,y                 ; 54c0: 99 03 56    ..V
    lda #0                                                            ; 54c3: a9 00       ..
    sta sprite_pixel_coord_table_xy+0,x                               ; 54c5: 9d 60 57    .`W
    sta sprite_pixel_coord_table_xy+1,x                               ; 54c8: 9d 61 57    .aW
    sta sprite_screen_and_data_addrs+screen_addr_lo,y                 ; 54cb: 99 00 56    ..V
    sta sprite_screen_and_data_addrs+screen_addr_hi,y                 ; 54ce: 99 01 56    ..V
    tya                                                               ; 54d1: 98          .
    adc #4                                                            ; 54d2: 69 04       i.
    tay                                                               ; 54d4: a8          .
    inx                                                               ; 54d5: e8          .
    inx                                                               ; 54d6: e8          .
    dec l0070                                                         ; 54d7: c6 70       .p
    bne init_sprite_screen_and_data_addrs_loop                        ; 54d9: d0 dc       ..
; &54db referenced 1 time by &54a5
    rts                                                               ; 54db: 60          `

.initial_qrstuv_values
.initial_q_value
    equw q_subroutine,            0                                   ; 54dc: 00 4f 00... .O.
; TODO: never used?
.initial_r_value
    equw r_subroutine,            0                                   ; 54e0: 9f 4f 00... .O.
.initial_s_value
    equw s_subroutine,            0                                   ; 54e4: 33 50 00... 3P.
.initial_t_value
    equw t_subroutine,            0                                   ; 54e8: e3 52 00... .R.
.initial_u_value
    equw u_subroutine,            0                                   ; 54ec: fb 53 00... .S.
.initial_v_value
    equw v_subroutine,            0                                   ; 54f0: 99 54 00... .T.
.initial_qrstuv_values_end
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 54f4: 00 00 00... ...
    equb &ff,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5500: ff 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 550c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5518: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5524: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5530: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 553c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5548: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5554: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5560: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 556c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5578: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5584: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 5590: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 559c: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 55a8: 00 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 55b4: 00 00 00... ...
; &55c0 referenced 3 times by &5330, &5380, &539c
.sprite_something_table_two_bytes_per_sprite
    equb &ff                                                          ; 55c0: ff          .
; &55c1 referenced 3 times by &534d, &53ce, &53ec
    equb   1,   0,   1,   1,   1, &ff,   0,   0,   0,   1,   0, &ff   ; 55c1: 01 00 01... ...
    equb &ff,   0, &ff,   1, &ff,   0,   0, &f8,   8,   0,   8,   8   ; 55cd: ff 00 ff... ...
    equb   8, &f8,   0,   0,   0,   8,   0, &f8, &f8,   0, &f8,   8   ; 55d9: 08 f8 00... ...
    equb &f8,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0   ; 55e5: f8 00 00... ...
    equb   0,   0,   0,   0,   0,   0,   0                            ; 55f1: 00 00 00... ...
; &55f8 referenced 3 times by &5170, &51ad, &5389
.constant_2
    equb 2                                                            ; 55f8: 02          .
; &55f9 referenced 3 times by &5175, &5192, &53a3
.constant_96
    equb &96                                                          ; 55f9: 96          .
; TODO: This is just a constant in this game.
; &55fa referenced 3 times by &51ba, &51f5, &53d7
.sprite_y_min
    equb &10                                                          ; 55fa: 10          .
; TODO: This is just a constant in this game.
; &55fb referenced 3 times by &51bf, &51db, &53f3
.sprite_y_max
    equb &fe,   0,   0,   0,   0                                      ; 55fb: fe 00 00... ...
; This is (TODO: probably!) a table with four bytes per sprite. The
; first two bytes are the little-endian screen address of the sprite
; (0 if it is not on screen) and the second two bytes are the big-
; endian address of the sprite's definition. The sprite address is the
; address of X-offset version 0; this does not change as the sprite
; moves, so it needs to be offset appropriately when
; plotting/unplotting.
.sprite_screen_and_data_addrs
; &5600 referenced 6 times by &508c, &5098, &50e9, &5111, &5414, &54cb
    equb          0,          0, >sprite_00, <sprite_00               ; 5600: 00 00 40... ..@            ; sprite 0
; &5601 referenced 9 times by &4f10, &5091, &509d, &50ee, &5114, &5329, &541b, &5463, &54ce
; &5602 referenced 6 times by &50b2, &50d6, &5108, &5439, &5457, &54ba
; &5603 referenced 6 times by &50ad, &50d1, &5103, &5434, &544d, &54c0
    equb          0,          0, >sprite_00, <sprite_00               ; 5604: 00 00 40... ..@            ; sprite 1
    equb          0,          0, >sprite_00, <sprite_00               ; 5608: 00 00 40... ..@            ; sprite 2
    equb          0,          0, >sprite_00, <sprite_00               ; 560c: 00 00 40... ..@            ; sprite 3
    equb          0,          0, >sprite_00, <sprite_00               ; 5610: 00 00 40... ..@            ; sprite 4
    equb          0,          0, >sprite_00, <sprite_00               ; 5614: 00 00 40... ..@            ; sprite 5
    equb          0,          0, >sprite_00, <sprite_00               ; 5618: 00 00 40... ..@            ; sprite 6
    equb          0,          0, >sprite_00, <sprite_00               ; 561c: 00 00 40... ..@            ; sprite 7
    equb          0,          0, >sprite_08, <sprite_08               ; 5620: 00 00 40... ..@            ; sprite 8
    equb          0,          0, >sprite_09, <sprite_09               ; 5624: 00 00 41... ..A            ; sprite 9
    equb          0,          0, >sprite_10, <sprite_10               ; 5628: 00 00 42... ..B            ; sprite 10
    equb          0,          0, >sprite_11, <sprite_11               ; 562c: 00 00 43... ..C            ; sprite 11
    equb          0,          0, >sprite_12, <sprite_12               ; 5630: 00 00 43... ..C            ; sprite 12
    equb          0,          0, >sprite_13, <sprite_13               ; 5634: 00 00 44... ..D            ; sprite 13
    equb          0,          0, >sprite_14, <sprite_14               ; 5638: 00 00 45... ..E            ; sprite 14
    equb          0,          0, >sprite_15, <sprite_15               ; 563c: 00 00 46... ..F            ; sprite 15
    equb          0,          0, >sprite_16, <sprite_16               ; 5640: 00 00 46... ..F            ; sprite 16
    equb          0,          0, >sprite_17, <sprite_17               ; 5644: 00 00 47... ..G            ; sprite 17
    equb          0,          0, >sprite_18, <sprite_18               ; 5648: 00 00 48... ..H            ; sprite 18
    equb          0,          0, >sprite_19, <sprite_19               ; 564c: 00 00 49... ..I            ; sprite 19
    equb          0,          0, >sprite_20, <sprite_20               ; 5650: 00 00 49... ..I            ; sprite 20
    equb          0,          0, >sprite_21, <sprite_21               ; 5654: 00 00 4a... ..J            ; sprite 21
    equb          0,          0, >sprite_22, <sprite_22               ; 5658: 00 00 4b... ..K            ; sprite 22
    equb          0,          0, >sprite_23, <sprite_23               ; 565c: 00 00 4c... ..L            ; sprite 23
    equb          0,          0, >sprite_24, <sprite_24               ; 5660: 00 00 4c... ..L            ; sprite 24
    equb          0,          0, >sprite_25, <sprite_25               ; 5664: 00 00 4d... ..M            ; sprite 25
    equb          0,          0, >sprite_00, <sprite_00               ; 5668: 00 00 40... ..@            ; sprite 26
    equb          0,          0, >sprite_00, <sprite_00               ; 566c: 00 00 40... ..@            ; sprite 27
    equb          0,          0, >sprite_00, <sprite_00               ; 5670: 00 00 40... ..@            ; sprite 28
    equb          0,          0, >sprite_00, <sprite_00               ; 5674: 00 00 40... ..@            ; sprite 29
    equb          0,          0, >sprite_00, <sprite_00               ; 5678: 00 00 40... ..@            ; sprite 30
    equb          0,          0, >sprite_00, <sprite_00               ; 567c: 00 00 40... ..@            ; sprite 31
    equb          0,          0, >sprite_00, <sprite_00               ; 5680: 00 00 40... ..@            ; sprite 32
    equb          0,          0, >sprite_00, <sprite_00               ; 5684: 00 00 40... ..@            ; sprite 33
    equb          0,          0, >sprite_00, <sprite_00               ; 5688: 00 00 40... ..@            ; sprite 34
    equb          0,          0, >sprite_00, <sprite_00               ; 568c: 00 00 40... ..@            ; sprite 35
    equb          0,          0, >sprite_00, <sprite_00               ; 5690: 00 00 40... ..@            ; sprite 36
    equb          0,          0, >sprite_00, <sprite_00               ; 5694: 00 00 40... ..@            ; sprite 37
    equb          0,          0, >sprite_00, <sprite_00               ; 5698: 00 00 40... ..@            ; sprite 38
    equb          0,          0, >sprite_00, <sprite_00               ; 569c: 00 00 40... ..@            ; sprite 39
    equb          0,          0, >sprite_00, <sprite_00               ; 56a0: 00 00 40... ..@            ; sprite 40
    equb          0,          0, >sprite_00, <sprite_00               ; 56a4: 00 00 40... ..@            ; sprite 41
    equb          0,          0, >sprite_00, <sprite_00               ; 56a8: 00 00 40... ..@            ; sprite 42
    equb          0,          0, >sprite_00, <sprite_00               ; 56ac: 00 00 40... ..@            ; sprite 43
    equb          0,          0, >sprite_00, <sprite_00               ; 56b0: 00 00 40... ..@            ; sprite 44
    equb          0,          0, >sprite_00, <sprite_00               ; 56b4: 00 00 40... ..@            ; sprite 45
    equb          0,          0, >sprite_00, <sprite_00               ; 56b8: 00 00 40... ..@            ; sprite 46
    equb          0,          0, >sprite_00, <sprite_00               ; 56bc: 00 00 40... ..@            ; sprite 47
; &56c0 referenced 1 time by &5066
.screen_y_addr_table
    equw &7ec0                                                        ; 56c0: c0 7e       .~
; &56c1 referenced 1 time by &506e
    equw &7d80                                                        ; 56c2: 80 7d       .}
    equw &7c40                                                        ; 56c4: 40 7c       @|
    equw &7b00                                                        ; 56c6: 00 7b       .{
    equw &79c0                                                        ; 56c8: c0 79       .y
    equw &7880                                                        ; 56ca: 80 78       .x
    equw &7740                                                        ; 56cc: 40 77       @w
    equw &7600                                                        ; 56ce: 00 76       .v
    equw &74c0                                                        ; 56d0: c0 74       .t
    equw &7380                                                        ; 56d2: 80 73       .s
    equw &7240                                                        ; 56d4: 40 72       @r
    equw &7100                                                        ; 56d6: 00 71       .q
    equw &6fc0                                                        ; 56d8: c0 6f       .o
    equw &6e80                                                        ; 56da: 80 6e       .n
    equw &6d40                                                        ; 56dc: 40 6d       @m
    equw &6c00                                                        ; 56de: 00 6c       .l
    equw &6ac0                                                        ; 56e0: c0 6a       .j
    equw &6980                                                        ; 56e2: 80 69       .i
    equw &6840                                                        ; 56e4: 40 68       @h
    equw &6700                                                        ; 56e6: 00 67       .g
    equw &65c0                                                        ; 56e8: c0 65       .e
    equw &6480                                                        ; 56ea: 80 64       .d
    equw &6340                                                        ; 56ec: 40 63       @c
    equw &6200                                                        ; 56ee: 00 62       .b
    equw &60c0                                                        ; 56f0: c0 60       .`
    equw &5f80                                                        ; 56f2: 80 5f       ._
    equw &5e40                                                        ; 56f4: 40 5e       @^
    equw &5d00                                                        ; 56f6: 00 5d       .]
    equw &5bc0                                                        ; 56f8: c0 5b       .[
    equw &5a80                                                        ; 56fa: 80 5a       .Z
    equw &5940                                                        ; 56fc: 40 59       @Y
    equw &5800                                                        ; 56fe: 00 58       .X
; This appears to be a big-endian table of start addresses for the
; game sprites. TODO: This is inspired guesswork; note that the copy
; of this at sprite_screen_and_data_addrs+{2,3] does get tweaked
; slightly.
; &5700 referenced 2 times by &5452, &54b7
.sprite_ref_addrs_be
    equb >sprite_00, <sprite_00                                       ; 5700: 40 00       @.
; &5701 referenced 2 times by &544a, &54bd
    equb >sprite_00, <sprite_00                                       ; 5702: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5704: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5706: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5708: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 570a: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 570c: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 570e: 40 00       @.
    equb >sprite_08, <sprite_08                                       ; 5710: 40 c0       @.
    equb >sprite_09, <sprite_09                                       ; 5712: 41 80       A.
    equb >sprite_10, <sprite_10                                       ; 5714: 42 40       B@
    equb >sprite_11, <sprite_11                                       ; 5716: 43 00       C.
    equb >sprite_12, <sprite_12                                       ; 5718: 43 c0       C.
    equb >sprite_13, <sprite_13                                       ; 571a: 44 80       D.
    equb >sprite_14, <sprite_14                                       ; 571c: 45 40       E@
    equb >sprite_15, <sprite_15                                       ; 571e: 46 00       F.
    equb >sprite_16, <sprite_16                                       ; 5720: 46 c0       F.
    equb >sprite_17, <sprite_17                                       ; 5722: 47 80       G.
    equb >sprite_18, <sprite_18                                       ; 5724: 48 40       H@
    equb >sprite_19, <sprite_19                                       ; 5726: 49 00       I.
    equb >sprite_20, <sprite_20                                       ; 5728: 49 c0       I.
    equb >sprite_21, <sprite_21                                       ; 572a: 4a 80       J.
    equb >sprite_22, <sprite_22                                       ; 572c: 4b 40       K@
    equb >sprite_23, <sprite_23                                       ; 572e: 4c 00       L.
    equb >sprite_24, <sprite_24                                       ; 5730: 4c c0       L.
    equb >sprite_25, <sprite_25                                       ; 5732: 4d 80       M.
    equb >sprite_00, <sprite_00                                       ; 5734: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5736: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5738: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 573a: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 573c: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 573e: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5740: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5742: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5744: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5746: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5748: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 574a: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 574c: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 574e: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5750: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5752: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5754: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5756: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 5758: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 575a: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 575c: 40 00       @.
    equb >sprite_00, <sprite_00                                       ; 575e: 40 00       @.
; Table of (pixel X coordinate, pixel Y coordinate) sprite positions,
; two bytes per sprite
; &5760 referenced 17 times by &4f31, &4f35, &5049, &50f5, &5150, &517c, &518d, &5195, &51a8, &51b0, &5320, &5336, &538c, &53ad, &5424, &5473, &54c5
.sprite_pixel_coord_table_xy
    equb 0                                                            ; 5760: 00          .
; &5761 referenced 15 times by &4f44, &4f48, &5050, &5155, &51c6, &51d6, &51de, &51f0, &51f8, &5346, &5353, &53bf, &53da, &5487, &54c8
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 5761: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 5775: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 5789: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0   ; 579d: 00 00 00... ...
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0                  ; 57b1: 00 00 00... ...
; TODO: This table appears to be read-only and since every byte is 1,
; we can probably replace accesses to it with immediate constants and
; get rid of it.
; &57c0 referenced 4 times by &5182, &519d, &51cb, &51e5
.constant_1_per_sprite_table
    equb 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1   ; 57c0: 01 01 01... ...
    equb 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1   ; 57d4: 01 01 01... ...
    equb 1, 1, 1, 1, 1, 1, 1, 1                                       ; 57e8: 01 01 01... ...
; &57f0 referenced 1 time by &4fac
.r_subroutine_inkey_code_1
    equb &bd                                                          ; 57f0: bd          .
; &57f1 referenced 1 time by &4fbf
.r_subroutine_inkey_code_2
    equb &9e                                                          ; 57f1: 9e          .
; &57f2 referenced 1 time by &4fde
.r_subroutine_inkey_code_3
    equb &b7                                                          ; 57f2: b7          .
; &57f3 referenced 1 time by &4ff6
.r_subroutine_inkey_code_4
    equb &97                                                          ; 57f3: 97          .
; &57f4 referenced 2 times by &501f, &5026
.r_subroutine_foo
    equb 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0                           ; 57f4: 00 00 00... ...
.pydis_end

; Label references by decreasing frequency:
;     l0070:                                            34
;     screen_ptr:                                       26
;     l0073:                                            19
;     l0075:                                            17
;     sprite_pixel_coord_table_xy:                      17
;     l0071:                                            16
;     l0072:                                            15
;     sprite_pixel_coord_table_xy+1:                    15
;     screen_ptr2:                                      14
;     l0074:                                            12
;     screen_ptr+1:                                     10
;     l007e:                                            10
;     sprite_screen_and_data_addrs+screen_addr_hi:       9
;     sprite_pixel_x_lo:                                 8
;     ri_x:                                              7
;     cli_rts:                                           7
;     u_subroutine_rts:                                  7
;     screen_ptr2+1:                                     6
;     l007f:                                             6
;     ri_y:                                              6
;     q_subroutine_no_collision_found:                   6
;     sprite_screen_and_data_addrs+screen_addr_lo:       6
;     sprite_screen_and_data_addrs+sprite_addr_hi:       6
;     sprite_screen_and_data_addrs+sprite_addr_lo:       6
;     sprite_pixel_y_lo:                                 5
;     sprite_pixel_x_hi:                                 5
;     sprite_check_y_position:                           5
;     osbyte:                                            5
;     sprite_pixel_y_hi:                                 4
;     ri_w:                                              4
;     constant_1_per_sprite_table:                       4
;     ri_a:                                              3
;     ri_a+1:                                            3
;     ri_b:                                              3
;     ri_b+1:                                            3
;     ri_z:                                              3
;     q_subroutine_next_candidate:                       3
;     c5002:                                             3
;     c501f:                                             3
;     clc_remove_sprite_from_screen:                     3
;     x_pixel_coord_in_a:                                3
;     y_pixel_coord_in_a:                                3
;     c53b4:                                             3
;     sprite_something_table_two_bytes_per_sprite:       3
;     sprite_something_table_two_bytes_per_sprite+1:     3
;     constant_2:                                        3
;     constant_96:                                       3
;     sprite_y_min:                                      3
;     sprite_y_max:                                      3
;     q_subroutine_test_abs_x_difference:                2
;     q_subroutine_test_abs_y_difference:                2
;     s_subroutine_rts:                                  2
;     clc_jmp_sprite_core:                               2
;     sprite_x_position_too_far_right:                   2
;     force_sprite_x_position_to_rhs:                    2
;     sprite_x_position_too_far_left:                    2
;     force_sprite_x_position_to_lhs:                    2
;     sprite_y_position_too_far_up:                      2
;     force_sprite_y_position_to_constant_fe:            2
;     sprite_y_position_too_far_down:                    2
;     force_sprite_y_position_to_constant_10:            2
;     sprite_core:                                       2
;     sprite_core_moving:                                2
;     c5346:                                             2
;     sprite_ref_addrs_be:                               2
;     sprite_ref_addrs_be+1:                             2
;     r_subroutine_foo:                                  2
;     l0403:                                             1
;     l0443:                                             1
;     q_subroutine_y_loop:                               1
;     q_subroutine_sprite_to_check_x_lt_candidate_x:     1
;     q_subroutine_sprite_to_check_y_lt_candidate_y:     1
;     q_subroutine_q_subroutine_collision_found:         1
;     q_subroutine_rts:                                  1
;     c4fbd:                                             1
;     c4fd0:                                             1
;     c4fdc:                                             1
;     c4ff4:                                             1
;     c5008:                                             1
;     c5012:                                             1
;     c5026:                                             1
;     c502b:                                             1
;     s_subroutine:                                      1
;     remove_sprite_from_screen:                         1
;     s_subroutine_rts2:                                 1
;     get_sprite_details:                                1
;     sprite_pixel_x_hi_zero:                            1
;     sprite_x_position_ok:                              1
;     sprite_pixel_y_hi_zero:                            1
;     sprite_y_position_adjusted:                        1
;     sprite_core_outer_loop:                            1
;     sprite_core_inner_loop:                            1
;     sprite_core_screen_ptr_updated:                    1
;     sprite_core_low_byte_wrap_handled:                 1
;     sprite_core_no_carry:                              1
;     sprite_core_next_row:                              1
;     sprite_core_low_byte_wrapped:                      1
;     sprite_core_moving_outer_loop:                     1
;     sprite_core_moving_inner_loop:                     1
;     sprite_core_moving_screen_ptr_updated:             1
;     sprite_core_moving_screen_ptr2_updated:            1
;     sprite_core_moving_low_byte_wrap_handled:          1
;     sprite_core_moving_low_byte_wrap2_handled:         1
;     sprite_core_moving_no_carry:                       1
;     sprite_core_moving_no_carry2:                      1
;     sprite_core_moving_next_row:                       1
;     sprite_core_moving_next_row2:                      1
;     sprite_core_moving_low_byte_wrapped:               1
;     sprite_core_moving_low_byte_wrapped2:              1
;     set_ri_os_coords_y_lo_in_x_and_jmp_s_subroutine:   1
;     c53ca_indirect:                                    1
;     new_x_pixel_coord_lt_0:                            1
;     t_subroutine_invalid_sprite_pixel_coord:           1
;     loop_c538c:                                        1
;     c539c:                                             1
;     c53a8:                                             1
;     add_negative_x_offset:                             1
;     new_y_pixel_coord_gt_255:                          1
;     add_negative_y_offset:                             1
;     new_y_pixel_coord_lt_0:                            1
;     c53ca:                                             1
;     x_pixel_coord_in_a_2:                              1
;     c53ec:                                             1
;     c53f8:                                             1
;     u_subroutine_ri_x_0:                               1
;     u_subroutine_rts2:                                 1
;     zero_ri_loop:                                      1
;     init_qrstuv_loop:                                  1
;     init_sprite_screen_and_data_addrs_loop:            1
;     c54db:                                             1
;     screen_y_addr_table:                               1
;     screen_y_addr_table+1:                             1
;     r_subroutine_inkey_code_1:                         1
;     r_subroutine_inkey_code_2:                         1
;     r_subroutine_inkey_code_3:                         1
;     r_subroutine_inkey_code_4:                         1

; Automatically generated labels:
;     c4fbd
;     c4fd0
;     c4fdc
;     c4ff4
;     c5002
;     c5008
;     c5012
;     c501f
;     c5026
;     c502b
;     c5346
;     c539c
;     c53a8
;     c53b4
;     c53ca
;     c53ec
;     c53f8
;     c54db
;     l0072
;     l0073
;     l0074
;     l0075
;     l0403
;     l0443
;     loop_c538c
    assert ('V'-'Q'+1)*4 == &18
    assert ('Z'-'A'+1)*4 == &68
    assert <(bytes_per_screen_line-7) == &39
    assert <sprite_00 == &00
    assert <sprite_08 == &c0
    assert <sprite_09 == &80
    assert <sprite_10 == &40
    assert <sprite_11 == &00
    assert <sprite_12 == &c0
    assert <sprite_13 == &80
    assert <sprite_14 == &40
    assert <sprite_15 == &00
    assert <sprite_16 == &c0
    assert <sprite_17 == &80
    assert <sprite_18 == &40
    assert <sprite_19 == &00
    assert <sprite_20 == &c0
    assert <sprite_21 == &80
    assert <sprite_22 == &40
    assert <sprite_23 == &00
    assert <sprite_24 == &c0
    assert <sprite_25 == &80
    assert >(bytes_per_screen_line-7) == &01
    assert >sprite_00 == &40
    assert >sprite_08 == &40
    assert >sprite_09 == &41
    assert >sprite_10 == &42
    assert >sprite_11 == &43
    assert >sprite_12 == &43
    assert >sprite_13 == &44
    assert >sprite_14 == &45
    assert >sprite_15 == &46
    assert >sprite_16 == &46
    assert >sprite_17 == &47
    assert >sprite_18 == &48
    assert >sprite_19 == &49
    assert >sprite_20 == &49
    assert >sprite_21 == &4a
    assert >sprite_22 == &4b
    assert >sprite_23 == &4c
    assert >sprite_24 == &4c
    assert >sprite_25 == &4d
    assert get_sprite_details_sprite_index == &7c
    assert initial_qrstuv_values-1 == &54db
    assert l007d == &7d
    assert max_sprite_num == &30
    assert max_sprite_num+1 == &31
    assert osbyte_clear_escape == &7c
    assert osbyte_inkey == &81
    assert q_subroutine == &4f00
    assert q_subroutine_abs_x_difference == &72
    assert q_subroutine_abs_y_difference == &73
    assert q_subroutine_max_candidate_sprite_x2 == &70
    assert q_subroutine_sprite_to_check_x2 == &71
    assert r_subroutine == &4f9f
    assert ri_a-1 == &0403
    assert ri_q-1 == &0443
    assert s_subroutine == &5033
    assert sprite_pixel_coord_table_xy+0 == &5760
    assert sprite_pixel_coord_table_xy+1 == &5761
    assert sprite_pixel_current_x == &72
    assert sprite_pixel_current_y == &73
    assert sprite_ptr == &70
    assert sprite_ptr+1 == &71
    assert sprite_ptr2 == &7e
    assert sprite_ptr2+1 == &7f
    assert sprite_ref_addrs_be+0 == &5700
    assert sprite_ref_addrs_be+1 == &5701
    assert sprite_y_offset_within_row == &75
    assert t_subroutine == &52e3
    assert t_subroutine_constant_1 == &73
    assert t_subroutine_os_x_hi == &70
    assert t_subroutine_os_x_lo == &71
    assert t_subroutine_os_y_hi == &72
    assert t_subroutine_w_minus_1_times_2 == &7f
    assert t_subroutine_w_minus_1_times_4 == &7e
    assert t_subroutine_w_minus_1_times_8 == &76
    assert u_subroutine == &53fb
    assert v_subroutine == &5499

MAKE_IMAGE =? FALSE
if not(MAKE_IMAGE)
    save pydis_start, pydis_end
endif
